{"hash":"0c68ae5fbbe9c217c1f0b9ad9443484a6df66396","fesm2022":[{"exports":["AlertLevel","AlertService","AlertType","AppService","ENTERPRISE_BUILDER_CONFIG","EnterpriseBuilderAlerts","EnterpriseBuilderAppConfig","EnterpriseBuilderLoaderComponent","EnterpriseBuilderLoaderModule","EnterpriseBuilderModule","EnterpriseBuilderService","FormBuildComponent","FormCompleteComponent","FormComponent","FormDeleteComponent","FormEditComponent","FormErrorComponent","FormRoutes","FormService","FormSubmissionComponent","FormSubmissionDeleteComponent","FormSubmissionEditComponent","FormSubmissionViewComponent","FormSubmissionsComponent","FormViewComponent","FormsComponent","FormsModule","FormsService","SubmissionRoutes","formResolver","submissionResolver"],"facadeModuleId":"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/formio-enterprise-builder-angular.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.alerts.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.service.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.service.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/build/build.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/view/view.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/edit/edit.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form/form.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/loader.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.resolver.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.resolver.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/delete/delete.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/complete/complete.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/error/error.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/delete/delete.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/edit/edit.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.resolver.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission/submission.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submissions/submissions.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/view/view.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.guard.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.routes.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.guard.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/settings/settings.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/changes/changes.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/conflict/conflict.component.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.routes.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/loader.module.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/index.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.module.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/index.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.module.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.config.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/index.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/index.mjs","/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/formio-enterprise-builder-angular.mjs"],"name":"formio-enterprise-builder-angular","type":"chunk","dynamicImports":[],"fileName":"formio-enterprise-builder-angular.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@formio/angular/embed":["FormioBuilder","*","FormioEmbedModule","Formio"],"@formio/premium":["default"],"@angular/core":["*","Injectable","Component","ViewChild","inject","NgModule","InjectionToken","Inject"],"@formio/enterprise-builder-core":["AlertService","AppService","FormService","AlertType","AlertLevel"],"@angular/router":["*","Router","RouterModule"],"@formio/angular":["*","FormioAppConfig"],"@angular/common":["*","CommonModule"],"@formio/js/utils":["Utils"],"@formio/js":["Formio"]},"imports":["@formio/angular/embed","@formio/premium","@angular/core","@formio/enterprise-builder-core","@angular/router","@formio/angular","@angular/common","@formio/js/utils","@formio/js"],"modules":{"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.alerts.mjs":{"code":"class EnterpriseBuilderAlerts extends AlertService {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":1689,"removedExports":[],"renderedExports":["EnterpriseBuilderAlerts"],"renderedLength":646},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.service.mjs":{"code":"class EnterpriseBuilderService extends AppService {\n    formioConfig;\n    alerts;\n    router;\n    constructor(formioConfig, alerts, router) {\n        const config = { ...formioConfig, ...{\n                license: formioConfig.license || '',\n                projectUrl: formioConfig.projectUrl || formioConfig.appUrl || '',\n                baseUrl: formioConfig.baseUrl || formioConfig.apiUrl || '',\n            } };\n        super(config, alerts);\n        this.formioConfig = formioConfig;\n        this.alerts = alerts;\n        this.router = router;\n    }\n    async authenticate() {\n        try {\n            await super.authenticate();\n        }\n        catch (err) {\n            if (err === 'Unauthorized') {\n                this.router.navigate([`/auth/login`]);\n            }\n        }\n        return this.currentUser;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, deps: [{ token: i1.FormioAppConfig }, { token: EnterpriseBuilderAlerts }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: i1.FormioAppConfig }, { type: EnterpriseBuilderAlerts }, { type: i2.Router }] });","originalLength":5428,"removedExports":[],"renderedExports":["EnterpriseBuilderService"],"renderedLength":1620},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.service.mjs":{"code":"class FormsService extends FormService {\n    appService;\n    constructor(appService) {\n        super(appService);\n        this.appService = appService;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, deps: [{ token: EnterpriseBuilderService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: EnterpriseBuilderService }] });","originalLength":2338,"removedExports":[],"renderedExports":["FormsService"],"renderedLength":811},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/build/build.component.mjs":{"code":"class FormBuildComponent {\n    service;\n    router;\n    route;\n    alerts;\n    builder;\n    formConfig = { data: {\n            title: '',\n            display: 'form'\n        } };\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    ngOnInit() {\n        this.service.resetForm();\n    }\n    configChange(event) {\n        if (event.changed &&\n            event.changed.component &&\n            event.changed.component.key === 'display') {\n            this.builder.builder.setDisplay(this.formConfig.data.display);\n        }\n    }\n    configForm() {\n        return {\n            components: [\n                {\n                    \"columns\": [\n                        {\n                            \"components\": [\n                                {\n                                    \"label\": \"Title\",\n                                    \"placeholder\": \"Form Title\",\n                                    \"hideLabel\": true,\n                                    \"applyMaskOn\": \"change\",\n                                    \"tableView\": true,\n                                    \"validateWhenHidden\": false,\n                                    \"key\": \"title\",\n                                    \"type\": \"textfield\",\n                                    \"input\": true\n                                }\n                            ],\n                            \"width\": 8,\n                            \"offset\": 0,\n                            \"push\": 0,\n                            \"pull\": 0,\n                            \"size\": \"md\",\n                            \"currentWidth\": 8\n                        },\n                        {\n                            \"components\": [\n                                {\n                                    \"label\": \"Display\",\n                                    \"widget\": \"choicesjs\",\n                                    \"placeholder\": \"Display as\",\n                                    \"tableView\": true,\n                                    \"hideLabel\": true,\n                                    \"data\": {\n                                        \"values\": [\n                                            {\n                                                \"label\": \"Form\",\n                                                \"value\": \"form\"\n                                            },\n                                            {\n                                                \"label\": \"Wizard\",\n                                                \"value\": \"wizard\"\n                                            },\n                                            {\n                                                \"label\": \"PDF\",\n                                                \"value\": \"pdf\"\n                                            }\n                                        ]\n                                    },\n                                    \"validateWhenHidden\": false,\n                                    \"key\": \"display\",\n                                    \"type\": \"select\",\n                                    \"input\": true\n                                }\n                            ],\n                            \"width\": 4,\n                            \"offset\": 0,\n                            \"push\": 0,\n                            \"pull\": 0,\n                            \"size\": \"md\",\n                            \"currentWidth\": 4\n                        }\n                    ],\n                    \"key\": \"columns\",\n                    \"type\": \"columns\",\n                    \"input\": false,\n                    \"tableView\": false\n                }\n            ]\n        };\n    }\n    onSave(form) {\n        this.router.navigate(['..', form._id, 'view'], { relativeTo: this.route });\n    }\n    saveForm() {\n        this.service.builderForm.title = this.formConfig.data.title;\n        this.service.builderForm.display = this.formConfig.data.display;\n        this.service.saveForm().then((form) => this.onSave(form));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormBuildComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormBuildComponent, selector: \"form-build\", viewQueries: [{ propertyName: \"builder\", first: true, predicate: FormioBuilder, descendants: true }], ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n  <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n    <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n    <span>\\n      Create New Form</span>\\n  </h5>\\n</div>\\n<hr />\\n<formio [form]=\\\"configForm()\\\" [submission]=\\\"this.service.builderForm\\\" (change)=\\\"configChange($event)\\\" class=\\\"w-100\\\"></formio>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n  <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n  <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }, { kind: \"component\", type: i4.FormioBuilder, selector: \"formio-builder\", inputs: [\"form\", \"options\"], outputs: [\"change\", \"ready\", \"error\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormBuildComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-build', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n  <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n    <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n    <span>\\n      Create New Form</span>\\n  </h5>\\n</div>\\n<hr />\\n<formio [form]=\\\"configForm()\\\" [submission]=\\\"this.service.builderForm\\\" (change)=\\\"configChange($event)\\\" class=\\\"w-100\\\"></formio>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n  <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n  <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }], propDecorators: { builder: [{\n                type: ViewChild,\n                args: [FormioBuilder]\n            }] } });","originalLength":18168,"removedExports":[],"renderedExports":["FormBuildComponent"],"renderedLength":7883},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/view/view.component.mjs":{"code":"class FormViewComponent {\n    service;\n    router;\n    route;\n    alerts;\n    mobileView = false;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    ngOnInit() {\n        this.service.resetSubmission();\n    }\n    onFormError(err) {\n        this.alerts.error(AlertType.FORM_VIEW, err);\n    }\n    onSubmitError(err) {\n        this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n    onSubmitDone(submission) {\n        this.router.navigate([`../submission/${submission._id}`], { relativeTo: this.route });\n    }\n    onSubmitLoadError(err) {\n        this.router.navigate(['../complete'], { relativeTo: this.route });\n    }\n    onSubmit(submission) {\n        this.service.createSubmission(submission).then((result) => {\n            this.service.loadSubmission(result._id)\n                .then((submission) => this.onSubmitDone(submission))\n                .catch((err) => this.onSubmitLoadError(err));\n        }).catch((err) => this.onSubmitError(err));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormViewComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormViewComponent, selector: \"form-view\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-center my-2\\\">\\n    <div class=\\\"form-ui-controls d-flex gap-2 justify-content-center\\\">\\n        <div class=\\\"d-flex gap-2\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"mobileView ? 'active': ''\\\" (click)=\\\"mobileView = true\\\"><i class=\\\"bi bi-phone\\\"></i></button>\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"!mobileView ? 'active': ''\\\" (click)=\\\"mobileView = false\\\"><i class=\\\"bi bi-laptop\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"mobileView ? 'mobileView' : ''\\\">\\n    <div class=\\\"bg-body rounded shadow-sm p-2 renderer\\\">\\n        <formio [url]=\\\"service.formUrl\\\" [form]=\\\"service.form\\\" (submit)=\\\"onSubmit($event)\\\" (error)=\\\"onFormError($event)\\\"></formio>\\n    </div>\\n</div>\", styles: [\".mobileView .renderer{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-view', template: \"<div class=\\\"d-flex justify-content-center my-2\\\">\\n    <div class=\\\"form-ui-controls d-flex gap-2 justify-content-center\\\">\\n        <div class=\\\"d-flex gap-2\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"mobileView ? 'active': ''\\\" (click)=\\\"mobileView = true\\\"><i class=\\\"bi bi-phone\\\"></i></button>\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"!mobileView ? 'active': ''\\\" (click)=\\\"mobileView = false\\\"><i class=\\\"bi bi-laptop\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"mobileView ? 'mobileView' : ''\\\">\\n    <div class=\\\"bg-body rounded shadow-sm p-2 renderer\\\">\\n        <formio [url]=\\\"service.formUrl\\\" [form]=\\\"service.form\\\" (submit)=\\\"onSubmit($event)\\\" (error)=\\\"onFormError($event)\\\"></formio>\\n    </div>\\n</div>\", styles: [\".mobileView .renderer{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":10260,"removedExports":[],"renderedExports":["FormViewComponent"],"renderedLength":3991},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/edit/edit.component.mjs":{"code":"class FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    builder;\n    mobileView = false;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    cancel() {\n        this.service.cancelFormUpdate();\n        this.afterCancel();\n    }\n    afterCancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    afterSave() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    onFormConflict(err) {\n        this.router.navigate(['../conflict'], { relativeTo: this.route });\n    }\n    onBuilder(builder) {\n        this.builder = builder;\n    }\n    onDisplaySelect(event) {\n        this.builder.setDisplay(event.target.value);\n    }\n    saveForm() {\n        this.service.saveForm().then(() => {\n            this.afterSave();\n        }).catch((err) => {\n            if (err._id === this.service.form._id) {\n                this.onFormConflict(err);\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormEditComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormEditComponent, selector: \"form-edit\", ngImport: i0, template: \"<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\" (ready)=\\\"onBuilder($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\\n\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"component\", type: i4.FormioBuilder, selector: \"formio-builder\", inputs: [\"form\", \"options\"], outputs: [\"change\", \"ready\", \"error\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormEditComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-edit', template: \"<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\" (ready)=\\\"onBuilder($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\\n\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":8965,"removedExports":[],"renderedExports":["FormEditComponent"],"renderedLength":3718},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form/form.component.mjs":{"code":"class FormComponent {\n    service;\n    router;\n    route;\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormComponent, selector: \"form-form\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n        <span><a class=\\\"nav-link\\\" routerLink=\\\"..\\\">Forms</a></span> / <span class=\\\"text-primary\\\">{{service.form.title || 'Form'}}</span>\\n    </h5>\\n    <ul aria-label=\\\"Form\\\" role=\\\"navigation\\\" class=\\\"nav nav-pills\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLinkActive=\\\"bg-primary-subtle\\\" class=\\\"nav-link text-primary\\\" routerLink=\\\"edit\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i> Edit\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-eye fs-xs\\\"></i> Use\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"service.app.config?.showData\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"submission\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i> Data\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-gear fs-xs\\\"></i> Settings\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n<router-outlet></router-outlet>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.RouterOutlet, selector: \"router-outlet\", inputs: [\"name\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2.RouterLinkActive, selector: \"[routerLinkActive]\", inputs: [\"routerLinkActiveOptions\", \"ariaCurrentWhenActive\", \"routerLinkActive\"], outputs: [\"isActiveChange\"], exportAs: [\"routerLinkActive\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-form', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n        <span><a class=\\\"nav-link\\\" routerLink=\\\"..\\\">Forms</a></span> / <span class=\\\"text-primary\\\">{{service.form.title || 'Form'}}</span>\\n    </h5>\\n    <ul aria-label=\\\"Form\\\" role=\\\"navigation\\\" class=\\\"nav nav-pills\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLinkActive=\\\"bg-primary-subtle\\\" class=\\\"nav-link text-primary\\\" routerLink=\\\"edit\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i> Edit\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-eye fs-xs\\\"></i> Use\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"service.app.config?.showData\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"submission\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i> Data\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-gear fs-xs\\\"></i> Settings\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n<router-outlet></router-outlet>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });","originalLength":8621,"removedExports":[],"renderedExports":["FormComponent"],"renderedLength":4790},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/loader.component.mjs":{"code":"class EnterpriseBuilderLoaderComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: EnterpriseBuilderLoaderComponent, selector: \"loader\", ngImport: i0, template: \"<div class=\\\"formio-loader\\\">\\n    <div class=\\\"loader-wrapper\\\">\\n        <div class=\\\"loader text-center\\\"></div>\\n    </div>\\n</div>\", styles: [\".formio-loader{position:relative;min-height:100px}.loader-wrapper{z-index:1000;position:absolute;inset:0;background-color:#0000}.loader{position:absolute;left:50%;top:50%;margin-left:-30px;margin-top:-30px;z-index:10000;display:inline-block;border:6px solid #f3f3f3;border-top:6px solid #3498db;border-radius:50%;width:60px;height:60px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\\n\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'loader', template: \"<div class=\\\"formio-loader\\\">\\n    <div class=\\\"loader-wrapper\\\">\\n        <div class=\\\"loader text-center\\\"></div>\\n    </div>\\n</div>\", styles: [\".formio-loader{position:relative;min-height:100px}.loader-wrapper{z-index:1000;position:absolute;inset:0;background-color:#0000}.loader{position:absolute;left:50%;top:50%;margin-left:-30px;margin-top:-30px;z-index:10000;display:inline-block;border:6px solid #f3f3f3;border-top:6px solid #3498db;border-radius:50%;width:60px;height:60px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\\n\"] }]\n        }] });","originalLength":2991,"removedExports":[],"renderedExports":["EnterpriseBuilderLoaderComponent"],"renderedLength":1825},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.component.mjs":{"code":"class FormsComponent {\n    service;\n    constructor(service) {\n        this.service = service;\n    }\n    get searchForm() {\n        return {\n            components: [\n                {\n                    type: 'columns',\n                    columns: [\n                        {\n                            width: 6,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'textfield',\n                                    label: 'Search by Title',\n                                    input: true,\n                                    prefix: '<i class=\"bi bi-search\"></i>',\n                                    hideLabel: true,\n                                    placeholder: 'Search by Title',\n                                    key: 'title'\n                                }\n                            ]\n                        },\n                        {\n                            width: 4,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'tags',\n                                    label: 'Search by Tags',\n                                    input: true,\n                                    hideLabel: true,\n                                    placeholder: 'Search by Tags',\n                                    key: 'tags'\n                                }\n                            ]\n                        },\n                        {\n                            width: 2,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'button',\n                                    label: 'Search',\n                                    action: 'event',\n                                    event: 'search',\n                                    leftIcon: 'bi bi-search',\n                                    block: true,\n                                    input: true,\n                                    saveOnEnter: true,\n                                    key: 'search'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n    get search() {\n        return { data: this.service.searchQuery };\n    }\n    enableSearch(form) {\n        form.on('search', (data) => this.service.loadForms(data));\n    }\n    get pageNumbers() {\n        return Array.from({ length: this.service.totalPages }, (_, i) => i + 1);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsComponent, deps: [{ token: FormsService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormsComponent, selector: \"enterprise-builder-forms\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi bi-list-check fs-5\\\"></i>\\n        Forms\\n    </h5>\\n    <a routerLink=\\\"build\\\" class=\\\"btn btn-primary\\\">Create Form</a>\\n</div>\\n<div class=\\\"bg-body p-2 mb-3\\\">\\n    <formio [form]=\\\"searchForm\\\" [submission]=\\\"search\\\" (ready)=\\\"enableSearch($event)\\\"></formio>\\n</div>\\n<div class=\\\"form-list-header list-group-flush d-flex flex-row justify-content-between align-items-center mb-2\\\">\\n    <div class=\\\"col-8 ps-3 fw-3 text-muted\\\">Title</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Actions</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Tags</div>\\n</div>\\n<hr />\\n<loader *ngIf=\\\"service.formsLoading\\\"></loader>\\n<ul *ngIf=\\\"!service.formsLoading\\\" class=\\\"list-group list-group-flush list-group-light\\\">\\n    <a class=\\\"list-group-item list-group-item-action d-flex flex-row  align-items-center py-4 mb-2 rounded shadow-sm\\\"\\n        *ngFor=\\\"let form of (service.forms | async)\\\">\\n        <!-- <i class=\\\"bi bi-file-medical fs-4 text-muted\\\"></i> -->\\n        <div class=\\\"col-8 ms-3 mr-auto d-flex flex-row gap-4 justify-content-start align-items-center cursor-pointer\\\"\\n            routerLink=\\\"{{ form._id }}/view\\\">\\n            <div class=\\\"ms-3 me-auto\\\">\\n                <div class=\\\"fs-4 fw-3 text-muted\\\">{{ form.title }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">created {{ form.created | date: 'short' }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">modified {{ form.modified | date: 'short' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2 form-actions d-flex flex-row  align-items-start gap-2 text-center ml-auto\\\">\\n            <a routerLink=\\\"{{ form._id }}/edit\\\" class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i>\\n            </a>\\n            <a routerLink=\\\"{{ form._id }}/submission\\\"\\n                class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-2 form-tags d-flex flex-row align-items-center\\\">\\n            <span class=\\\"badge text-bg-secondary me-1\\\" *ngFor=\\\"let tag of form.tags\\\">{{tag}}</span>\\n        </div>\\n    </a>\\n</ul>\\n<div *ngIf=\\\"!service.formsLoading\\\" class=\\\"d-flex justify-content-center\\\">\\n    <nav aria-label=\\\"Forms Navigation\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"!service.formsLoading\\\">\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.prevPage()\\\"><i class=\\\"bi bi-chevron-left\\\"></i></button></li>\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let i of pageNumbers;\\\">\\n                <button class=\\\"page-link\\\" [attr.aria-current]=\\\"i===service.page\\\" [ngClass]=\\\"{active: (i === service.page)}\\\" (click)=\\\"service.goto(i)\\\">{{ i }}</button>\\n            </li>\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.nextPage()\\\"><i class=\\\"bi bi-chevron-right\\\"></i></button></li>\\n        </ul>\\n    </nav>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }, { kind: \"component\", type: EnterpriseBuilderLoaderComponent, selector: \"loader\" }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2$1.DatePipe, name: \"date\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'enterprise-builder-forms', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi bi-list-check fs-5\\\"></i>\\n        Forms\\n    </h5>\\n    <a routerLink=\\\"build\\\" class=\\\"btn btn-primary\\\">Create Form</a>\\n</div>\\n<div class=\\\"bg-body p-2 mb-3\\\">\\n    <formio [form]=\\\"searchForm\\\" [submission]=\\\"search\\\" (ready)=\\\"enableSearch($event)\\\"></formio>\\n</div>\\n<div class=\\\"form-list-header list-group-flush d-flex flex-row justify-content-between align-items-center mb-2\\\">\\n    <div class=\\\"col-8 ps-3 fw-3 text-muted\\\">Title</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Actions</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Tags</div>\\n</div>\\n<hr />\\n<loader *ngIf=\\\"service.formsLoading\\\"></loader>\\n<ul *ngIf=\\\"!service.formsLoading\\\" class=\\\"list-group list-group-flush list-group-light\\\">\\n    <a class=\\\"list-group-item list-group-item-action d-flex flex-row  align-items-center py-4 mb-2 rounded shadow-sm\\\"\\n        *ngFor=\\\"let form of (service.forms | async)\\\">\\n        <!-- <i class=\\\"bi bi-file-medical fs-4 text-muted\\\"></i> -->\\n        <div class=\\\"col-8 ms-3 mr-auto d-flex flex-row gap-4 justify-content-start align-items-center cursor-pointer\\\"\\n            routerLink=\\\"{{ form._id }}/view\\\">\\n            <div class=\\\"ms-3 me-auto\\\">\\n                <div class=\\\"fs-4 fw-3 text-muted\\\">{{ form.title }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">created {{ form.created | date: 'short' }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">modified {{ form.modified | date: 'short' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2 form-actions d-flex flex-row  align-items-start gap-2 text-center ml-auto\\\">\\n            <a routerLink=\\\"{{ form._id }}/edit\\\" class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i>\\n            </a>\\n            <a routerLink=\\\"{{ form._id }}/submission\\\"\\n                class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-2 form-tags d-flex flex-row align-items-center\\\">\\n            <span class=\\\"badge text-bg-secondary me-1\\\" *ngFor=\\\"let tag of form.tags\\\">{{tag}}</span>\\n        </div>\\n    </a>\\n</ul>\\n<div *ngIf=\\\"!service.formsLoading\\\" class=\\\"d-flex justify-content-center\\\">\\n    <nav aria-label=\\\"Forms Navigation\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"!service.formsLoading\\\">\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.prevPage()\\\"><i class=\\\"bi bi-chevron-left\\\"></i></button></li>\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let i of pageNumbers;\\\">\\n                <button class=\\\"page-link\\\" [attr.aria-current]=\\\"i===service.page\\\" [ngClass]=\\\"{active: (i === service.page)}\\\" (click)=\\\"service.goto(i)\\\">{{ i }}</button>\\n            </li>\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.nextPage()\\\"><i class=\\\"bi bi-chevron-right\\\"></i></button></li>\\n        </ul>\\n    </nav>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }] });","originalLength":21430,"removedExports":[],"renderedExports":["FormsComponent"],"renderedLength":11025},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.resolver.mjs":{"code":"const formResolver = (route, state, service = inject(FormsService), router = inject(Router)) => {\n    return service.app.loadProject().then(() => service.loadForm(route.paramMap.get('formId')).catch(() => {\n        router.navigate(['..']);\n    }));\n};","originalLength":2087,"removedExports":[],"renderedExports":["formResolver"],"renderedLength":251},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.resolver.mjs":{"code":"const formsResolver = (route, state, service = inject(FormsService)) => {\n    return service.app.loadProject().then(() => service.loadForms());\n};","originalLength":1500,"removedExports":[],"renderedExports":["formsResolver"],"renderedLength":146},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/delete/delete.component.mjs":{"code":"class FormDeleteComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    onCancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    onDeleteDone() {\n        this.router.navigate(['../../'], { relativeTo: this.route });\n    }\n    onDeleteError(err) {\n        // Do nothing and allow extended classes to override.\n    }\n    onDelete() {\n        this.service.deleteForm()\n            .then(() => this.onDeleteDone())\n            .catch((err) => this.onDeleteError(err));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormDeleteComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormDeleteComponent, selector: \"form-delete\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>Are you sure you wish to delete {{service.form?.title}} form?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger me-2\\\">Yes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormDeleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-delete', template: \"<div class=\\\"p-3\\\">\\n    <h3>Are you sure you wish to delete {{service.form?.title}} form?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger me-2\\\">Yes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":6033,"removedExports":[],"renderedExports":["FormDeleteComponent"],"renderedLength":2195},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/complete/complete.component.mjs":{"code":"class FormCompleteComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormCompleteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormCompleteComponent, selector: \"form-complete\", ngImport: i0, template: \"<div class=\\\"alert alert-success\\\">Submission Complete!</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormCompleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-complete', template: \"<div class=\\\"alert alert-success\\\">Submission Complete!</div>\" }]\n        }] });","originalLength":1777,"removedExports":[],"renderedExports":["FormCompleteComponent"],"renderedLength":739},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/error/error.component.mjs":{"code":"class FormErrorComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormErrorComponent, selector: \"form-error\", ngImport: i0, template: \"<div class=\\\"alert alert-danger\\\">Unable to submit form. Please contact the administrator.</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormErrorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-error', template: \"<div class=\\\"alert alert-danger\\\">Unable to submit form. Please contact the administrator.</div>\" }]\n        }] });","originalLength":1841,"removedExports":[],"renderedExports":["FormErrorComponent"],"renderedLength":791},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/delete/delete.component.mjs":{"code":"class FormSubmissionDeleteComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    cancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    deleteSubmission() {\n        this.service.deleteSubmission().then(() => {\n            this.router.navigate(['../..'], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionDeleteComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionDeleteComponent, selector: \"form-submission-delete\", ngImport: i0, template: \"<h3>Are you sure you wish to delete this record?</h3>\\n<div class=\\\"btn-toolbar\\\">\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-primary me-3 px-3 py-2\\\">No</button>\\n  <button type=\\\"button\\\" (click)=\\\"deleteSubmission()\\\" class=\\\"btn btn-light px-3 py-2\\\" style=\\\"margin-right: 10px;\\\">Yes, delete this submission</button>\\n</div>\", styles: [\"\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionDeleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-delete', template: \"<h3>Are you sure you wish to delete this record?</h3>\\n<div class=\\\"btn-toolbar\\\">\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-primary me-3 px-3 py-2\\\">No</button>\\n  <button type=\\\"button\\\" (click)=\\\"deleteSubmission()\\\" class=\\\"btn btn-light px-3 py-2\\\" style=\\\"margin-right: 10px;\\\">Yes, delete this submission</button>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":5744,"removedExports":[],"renderedExports":["FormSubmissionDeleteComponent"],"renderedLength":2110},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/edit/edit.component.mjs":{"code":"class FormSubmissionEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    saveSubmission(submission) {\n        return this.service.saveSubmission(submission).then(() => {\n            this.router.navigate(['../view'], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionEditComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionEditComponent, selector: \"form-submission-edit\", ngImport: i0, template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" (submit)=\\\"saveSubmission($event)\\\"></formio>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionEditComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-edit', template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" (submit)=\\\"saveSubmission($event)\\\"></formio>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":4879,"removedExports":[],"renderedExports":["FormSubmissionEditComponent"],"renderedLength":1748},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.resolver.mjs":{"code":"const submissionResolver = (route, state, service = inject(FormsService), alerts = inject(EnterpriseBuilderAlerts), router = inject(Router)) => {\n    return service.loadSubmission(route.paramMap.get('submissionId')).catch((err) => {\n        router.navigate(['..']);\n    });\n};","originalLength":2524,"removedExports":[],"renderedExports":["submissionResolver"],"renderedLength":276},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission/submission.component.mjs":{"code":"class FormSubmissionComponent {\n    service;\n    router;\n    route;\n    pdfDownload = '';\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.service.getDownloadUrl().then((url) => (this.pdfDownload = url));\n    }\n    isChildRoute(path) {\n        return this.route.children.some((child) => child.snapshot.routeConfig?.path === path);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionComponent, selector: \"form-submission\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <div class=\\\"d-flex align-items-start justify-content-between mb-3\\\">\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('')\\\" routerLink=\\\"./\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-eye text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('edit')\\\" routerLink=\\\"./edit\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-pencil text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && pdfDownload\\\" [href]=\\\"pdfDownload\\\" target=\\\"_blank\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-auto\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-file-pdf-fill text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user\\\" routerLink=\\\"./delete\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-trash text-muted m-0\\\"></i></a>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n  \", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.RouterOutlet, selector: \"router-outlet\", inputs: [\"name\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2.RouterLinkActive, selector: \"[routerLinkActive]\", inputs: [\"routerLinkActiveOptions\", \"ariaCurrentWhenActive\", \"routerLinkActive\"], outputs: [\"isActiveChange\"], exportAs: [\"routerLinkActive\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission', template: \"<div class=\\\"p-3\\\">\\n    <div class=\\\"d-flex align-items-start justify-content-between mb-3\\\">\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('')\\\" routerLink=\\\"./\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-eye text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('edit')\\\" routerLink=\\\"./edit\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-pencil text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && pdfDownload\\\" [href]=\\\"pdfDownload\\\" target=\\\"_blank\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-auto\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-file-pdf-fill text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user\\\" routerLink=\\\"./delete\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-trash text-muted m-0\\\"></i></a>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n  \" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });","originalLength":8628,"removedExports":[],"renderedExports":["FormSubmissionComponent"],"renderedLength":4347},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submissions/submissions.component.mjs":{"code":"class FormSubmissionsComponent {\n    service;\n    router;\n    route;\n    submissionForm;\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n    }\n    ngOnInit() {\n        const submissionFields = [];\n        this.service.resetSubmission();\n        Utils.eachComponent(Utils.fastCloneDeep(this.service.form.components), function (component, path) {\n            if (path.indexOf('.') === -1 && component.input && component.tableView) {\n                component.key = 'data.' + component.key;\n                submissionFields.push(component);\n            }\n        }, false);\n        this.submissionForm = {\n            components: [\n                {\n                    fetch: {\n                        sort: {\n                            defaultQuery: \"created\",\n                            descending: true\n                        },\n                        url: this.service.submissionUrl(),\n                        authenticate: true,\n                        enableFetch: true\n                    },\n                    components: submissionFields,\n                    type: \"datatable\",\n                    key: \"submissionDataTab\",\n                    label: \"Submission Data Tab\",\n                    itemsPerPage: 25,\n                    filterable: true,\n                    sortable: true,\n                    hideLabel: true,\n                    enableRowSelect: false\n                }\n            ]\n        };\n    }\n    onFormio(formio) {\n        formio.on('rowClick', (row) => {\n            this.router.navigate([row._id], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionsComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionsComponent, selector: \"form-submissions\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <formio [form]=\\\"submissionForm\\\" (ready)=\\\"onFormio($event)\\\"></formio>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submissions', template: \"<div class=\\\"p-3\\\">\\n    <formio [form]=\\\"submissionForm\\\" (ready)=\\\"onFormio($event)\\\"></formio>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });","originalLength":8367,"removedExports":[],"renderedExports":["FormSubmissionsComponent"],"renderedLength":2860},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/view/view.component.mjs":{"code":"class FormSubmissionViewComponent {\n    service;\n    constructor(service) {\n        this.service = service;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionViewComponent, deps: [{ token: FormsService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionViewComponent, selector: \"form-submission-view\", ngImport: i0, template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" [options]=\\\"{readOnly: true}\\\"></formio>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-view', template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" [options]=\\\"{readOnly: true}\\\"></formio>\" }]\n        }], ctorParameters: () => [{ type: FormsService }] });","originalLength":2833,"removedExports":[],"renderedExports":["FormSubmissionViewComponent"],"renderedLength":1225},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.guard.mjs":{"code":"const submissionGuard = (component, currentRoute, currentState, nextState, service = inject(FormsService)) => {\n    service.unloadSubmission();\n    return true;\n};","originalLength":1730,"removedExports":[],"renderedExports":["submissionGuard"],"renderedLength":163},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/submission.routes.mjs":{"code":"function SubmissionRoutes(config) {\n    return [\n        {\n            path: '',\n            component: config?.index || FormSubmissionsComponent\n        },\n        {\n            path: ':submissionId',\n            component: config?.submission || FormSubmissionComponent,\n            resolve: { submission: submissionResolver },\n            canDeactivate: [submissionGuard],\n            children: [\n                {\n                    path: '',\n                    component: config?.view || FormSubmissionViewComponent\n                },\n                {\n                    path: 'edit',\n                    component: config?.edit || FormSubmissionEditComponent\n                },\n                {\n                    path: 'delete',\n                    component: config?.delete || FormSubmissionDeleteComponent\n                }\n            ]\n        }\n    ];\n}","originalLength":4888,"removedExports":[],"renderedExports":["SubmissionRoutes"],"renderedLength":870},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.guard.mjs":{"code":"const formGuard = (component, currentRoute, currentState, nextState, service = inject(FormsService), router = inject(Router)) => {\n    if (service.changed) {\n        router.navigate([currentState.url.split('/').slice(0, -1).join('/'), 'changes'], {\n            state: { intendedRoute: nextState.url }\n        });\n        return false;\n    }\n    service.unloadForm();\n    return true;\n};","originalLength":2814,"removedExports":[],"renderedExports":["formGuard"],"renderedLength":386},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/settings/settings.component.mjs":{"code":"class FormSettingsComponent extends FormEditComponent {\n    settings = {};\n    ngOnInit() {\n        this.settings = { data: {\n                title: this.service.builderForm.title,\n                name: this.service.builderForm.name,\n                path: this.service.builderForm.path,\n                tags: this.service.builderForm.tags\n            } };\n    }\n    get settingsForm() {\n        return {\n            components: [\n                {\n                    type: 'textfield',\n                    key: 'title',\n                    label: 'Title',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'textfield',\n                    key: 'name',\n                    label: 'Name',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'textfield',\n                    key: 'path',\n                    label: 'API Path',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'tags',\n                    key: 'tags',\n                    label: 'Tags',\n                    input: true\n                }\n            ]\n        };\n    }\n    saveForm() {\n        this.service.builderForm.title = this.settings.data.title;\n        this.service.builderForm.name = this.settings.data.name;\n        this.service.builderForm.path = this.settings.data.path;\n        if (this.settings.data.tags) {\n            this.service.builderForm.tags = this.settings.data.tags.split(',').map((tag) => tag.trim());\n        }\n        return super.saveForm();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSettingsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSettingsComponent, selector: \"form-settings\", usesInheritance: true, ngImport: i0, template: \"<h4>Form Settings</h4>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio [form]=\\\"settingsForm\\\" [submission]=\\\"settings\\\"></formio>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSettingsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-settings', template: \"<h4>Form Settings</h4>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio [form]=\\\"settingsForm\\\" [submission]=\\\"settings\\\"></formio>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\" }]\n        }] });","originalLength":8848,"removedExports":[],"renderedExports":["FormSettingsComponent"],"renderedLength":3281},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/changes/changes.component.mjs":{"code":"class FormChangesComponent extends FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    intendedRoute = null;\n    constructor(service, router, route, alerts) {\n        super(service, router, route, alerts);\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n        this.intendedRoute = this.router.getCurrentNavigation()?.extras.state?.intendedRoute || null;\n    }\n    afterCancel() {\n        if (this.intendedRoute) {\n            this.router.navigate([this.intendedRoute]);\n            return;\n        }\n        super.afterCancel();\n    }\n    afterSave() {\n        if (this.intendedRoute) {\n            this.router.navigate([this.intendedRoute]);\n            return;\n        }\n        super.afterSave();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormChangesComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormChangesComponent, selector: \"form-changes\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>You have made some changes to this form. Would you like to save your changes?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveForm()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormChangesComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-changes', template: \"<div class=\\\"p-3\\\">\\n    <h3>You have made some changes to this form. Would you like to save your changes?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveForm()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":6729,"removedExports":[],"renderedExports":["FormChangesComponent"],"renderedLength":2395},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/conflict/conflict.component.mjs":{"code":"class FormConflictComponent extends FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        super(service, router, route, alerts);\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    onMergeConflict(err) {\n        this.alerts.add({\n            level: AlertLevel.ERROR,\n            message: 'There is still a conflict with this form. Please try again.'\n        });\n    }\n    merge() {\n        this.service.mergeAndSaveChanges().then(() => {\n            this.afterSave();\n        }).catch((err) => {\n            if (err._id === this.service.form._id) {\n                this.onMergeConflict(err);\n            }\n        });\n    }\n    onCancel() {\n        this.service.cancelFormUpdate();\n        this.afterCancel();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormConflictComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormConflictComponent, selector: \"form-conflict\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>A newer version of this form has been saved to the server. The following changes will be merged with with this version.</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"merge()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormConflictComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-conflict', template: \"<div class=\\\"p-3\\\">\\n    <h3>A newer version of this form has been saved to the server. The following changes will be merged with with this version.</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"merge()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });","originalLength":7280,"removedExports":[],"renderedExports":["FormConflictComponent"],"renderedLength":2548},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/form.routes.mjs":{"code":"function FormRoutes(config = {}) {\n    return [\n        {\n            path: '',\n            component: config.index || FormsComponent,\n            resolve: { form: formsResolver },\n        },\n        {\n            path: 'build',\n            component: config.build || FormBuildComponent\n        },\n        {\n            path: ':formId',\n            component: config.form || FormComponent,\n            resolve: { form: formResolver },\n            canDeactivate: [formGuard],\n            children: [\n                {\n                    path: 'view',\n                    component: config.view || FormViewComponent\n                },\n                {\n                    path: 'edit',\n                    component: config.edit || FormEditComponent\n                },\n                {\n                    path: 'delete',\n                    component: config.delete || FormDeleteComponent\n                },\n                {\n                    path: 'changes',\n                    component: config.changes || FormChangesComponent\n                },\n                {\n                    path: 'conflict',\n                    component: config.conflict || FormConflictComponent\n                },\n                {\n                    path: 'complete',\n                    component: config.complete || FormCompleteComponent\n                },\n                {\n                    path: 'error',\n                    component: config.error || FormErrorComponent\n                },\n                {\n                    path: 'settings',\n                    component: config.settings || FormSettingsComponent\n                },\n                {\n                    path: 'submission',\n                    children: SubmissionRoutes(config.submission)\n                }\n            ]\n        }\n    ];\n}","originalLength":9076,"removedExports":[],"renderedExports":["FormRoutes"],"renderedLength":1807},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/loader.module.mjs":{"code":"class EnterpriseBuilderLoaderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, declarations: [EnterpriseBuilderLoaderComponent], imports: [CommonModule], exports: [EnterpriseBuilderLoaderComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        EnterpriseBuilderLoaderComponent\n                    ],\n                    exports: [\n                        EnterpriseBuilderLoaderComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });","originalLength":2713,"removedExports":[],"renderedExports":["EnterpriseBuilderLoaderModule"],"renderedLength":1181},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/submissions/index.mjs":{"code":"","originalLength":1884,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/forms.module.mjs":{"code":"class FormsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, declarations: [FormsComponent,\n            FormBuildComponent,\n            FormViewComponent,\n            FormEditComponent,\n            FormComponent,\n            FormDeleteComponent,\n            FormChangesComponent,\n            FormConflictComponent,\n            FormSettingsComponent,\n            FormSubmissionComponent,\n            FormSubmissionViewComponent,\n            FormSubmissionEditComponent,\n            FormSubmissionDeleteComponent,\n            FormSubmissionsComponent,\n            FormCompleteComponent,\n            FormErrorComponent], imports: [CommonModule,\n            FormioEmbedModule,\n            EnterpriseBuilderLoaderModule,\n            RouterModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, providers: [\n            FormsService,\n        ], imports: [CommonModule,\n            FormioEmbedModule,\n            EnterpriseBuilderLoaderModule,\n            RouterModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FormsComponent,\n                        FormBuildComponent,\n                        FormViewComponent,\n                        FormEditComponent,\n                        FormComponent,\n                        FormDeleteComponent,\n                        FormChangesComponent,\n                        FormConflictComponent,\n                        FormSettingsComponent,\n                        FormSubmissionComponent,\n                        FormSubmissionViewComponent,\n                        FormSubmissionEditComponent,\n                        FormSubmissionDeleteComponent,\n                        FormSubmissionsComponent,\n                        FormCompleteComponent,\n                        FormErrorComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormioEmbedModule,\n                        EnterpriseBuilderLoaderModule,\n                        RouterModule\n                    ],\n                    providers: [\n                        FormsService,\n                    ]\n                }]\n        }] });","originalLength":8758,"removedExports":[],"renderedExports":["FormsModule"],"renderedLength":2610},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/form/index.mjs":{"code":"","originalLength":2776,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.module.mjs":{"code":"class EnterpriseBuilderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, providers: [\n            EnterpriseBuilderService,\n            EnterpriseBuilderAlerts\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        EnterpriseBuilderService,\n                        EnterpriseBuilderAlerts\n                    ]\n                }]\n        }] });","originalLength":2373,"removedExports":[],"renderedExports":["EnterpriseBuilderModule"],"renderedLength":940},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/enterprise-builder.config.mjs":{"code":"const ENTERPRISE_BUILDER_CONFIG = new InjectionToken('ENTERPRISE_BUILDER_CONFIG');\nclass EnterpriseBuilderAppConfig extends FormioAppConfig {\n    license = '';\n    projectUrl = '';\n    baseUrl = '';\n    tag = '';\n    icons = '';\n    config = {};\n    showData = false;\n    constructor(config) {\n        super({\n            appUrl: config.projectUrl,\n            apiUrl: config.baseUrl\n        });\n        Formio.license = config.license;\n        this.license = config.license;\n        this.projectUrl = config.projectUrl;\n        this.baseUrl = config.baseUrl;\n        this.tag = config.tag;\n        this.icons = config.icons;\n        this.config = config.config;\n        this.showData = config.showData;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig, deps: [{ token: ENTERPRISE_BUILDER_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ENTERPRISE_BUILDER_CONFIG]\n                }] }] });","originalLength":4876,"removedExports":[],"renderedExports":["ENTERPRISE_BUILDER_CONFIG","EnterpriseBuilderAppConfig"],"renderedLength":1414},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/loader/index.mjs":{"code":"","originalLength":710,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/index.mjs":{"code":"Formio$1.use(PremiumModule);","originalLength":1969,"removedExports":[],"renderedExports":[],"renderedLength":28},"/Users/travistidwell/Documents/formio/modules/enterprise-builder/src/angular/dist/enterprise-builder/esm2022/formio-enterprise-builder-angular.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":555,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i4 from '@formio/angular/embed';\nimport { FormioBuilder, FormioEmbedModule, Formio as Formio$1 } from '@formio/angular/embed';\nimport PremiumModule from '@formio/premium';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, ViewChild, inject, NgModule, InjectionToken, Inject } from '@angular/core';\nimport { AlertService, AppService, FormService, AlertType, AlertLevel } from '@formio/enterprise-builder-core';\nexport { AlertLevel, AlertService, AlertType, AppService, FormService } from '@formio/enterprise-builder-core';\nimport * as i2 from '@angular/router';\nimport { Router, RouterModule } from '@angular/router';\nimport * as i1 from '@formio/angular';\nimport { FormioAppConfig } from '@formio/angular';\nimport * as i2$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Utils } from '@formio/js/utils';\nimport { Formio } from '@formio/js';\n\nclass EnterpriseBuilderAlerts extends AlertService {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAlerts, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass EnterpriseBuilderService extends AppService {\n    formioConfig;\n    alerts;\n    router;\n    constructor(formioConfig, alerts, router) {\n        const config = { ...formioConfig, ...{\n                license: formioConfig.license || '',\n                projectUrl: formioConfig.projectUrl || formioConfig.appUrl || '',\n                baseUrl: formioConfig.baseUrl || formioConfig.apiUrl || '',\n            } };\n        super(config, alerts);\n        this.formioConfig = formioConfig;\n        this.alerts = alerts;\n        this.router = router;\n    }\n    async authenticate() {\n        try {\n            await super.authenticate();\n        }\n        catch (err) {\n            if (err === 'Unauthorized') {\n                this.router.navigate([`/auth/login`]);\n            }\n        }\n        return this.currentUser;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, deps: [{ token: i1.FormioAppConfig }, { token: EnterpriseBuilderAlerts }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: i1.FormioAppConfig }, { type: EnterpriseBuilderAlerts }, { type: i2.Router }] });\n\nclass FormsService extends FormService {\n    appService;\n    constructor(appService) {\n        super(appService);\n        this.appService = appService;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, deps: [{ token: EnterpriseBuilderService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: EnterpriseBuilderService }] });\n\nclass FormBuildComponent {\n    service;\n    router;\n    route;\n    alerts;\n    builder;\n    formConfig = { data: {\n            title: '',\n            display: 'form'\n        } };\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    ngOnInit() {\n        this.service.resetForm();\n    }\n    configChange(event) {\n        if (event.changed &&\n            event.changed.component &&\n            event.changed.component.key === 'display') {\n            this.builder.builder.setDisplay(this.formConfig.data.display);\n        }\n    }\n    configForm() {\n        return {\n            components: [\n                {\n                    \"columns\": [\n                        {\n                            \"components\": [\n                                {\n                                    \"label\": \"Title\",\n                                    \"placeholder\": \"Form Title\",\n                                    \"hideLabel\": true,\n                                    \"applyMaskOn\": \"change\",\n                                    \"tableView\": true,\n                                    \"validateWhenHidden\": false,\n                                    \"key\": \"title\",\n                                    \"type\": \"textfield\",\n                                    \"input\": true\n                                }\n                            ],\n                            \"width\": 8,\n                            \"offset\": 0,\n                            \"push\": 0,\n                            \"pull\": 0,\n                            \"size\": \"md\",\n                            \"currentWidth\": 8\n                        },\n                        {\n                            \"components\": [\n                                {\n                                    \"label\": \"Display\",\n                                    \"widget\": \"choicesjs\",\n                                    \"placeholder\": \"Display as\",\n                                    \"tableView\": true,\n                                    \"hideLabel\": true,\n                                    \"data\": {\n                                        \"values\": [\n                                            {\n                                                \"label\": \"Form\",\n                                                \"value\": \"form\"\n                                            },\n                                            {\n                                                \"label\": \"Wizard\",\n                                                \"value\": \"wizard\"\n                                            },\n                                            {\n                                                \"label\": \"PDF\",\n                                                \"value\": \"pdf\"\n                                            }\n                                        ]\n                                    },\n                                    \"validateWhenHidden\": false,\n                                    \"key\": \"display\",\n                                    \"type\": \"select\",\n                                    \"input\": true\n                                }\n                            ],\n                            \"width\": 4,\n                            \"offset\": 0,\n                            \"push\": 0,\n                            \"pull\": 0,\n                            \"size\": \"md\",\n                            \"currentWidth\": 4\n                        }\n                    ],\n                    \"key\": \"columns\",\n                    \"type\": \"columns\",\n                    \"input\": false,\n                    \"tableView\": false\n                }\n            ]\n        };\n    }\n    onSave(form) {\n        this.router.navigate(['..', form._id, 'view'], { relativeTo: this.route });\n    }\n    saveForm() {\n        this.service.builderForm.title = this.formConfig.data.title;\n        this.service.builderForm.display = this.formConfig.data.display;\n        this.service.saveForm().then((form) => this.onSave(form));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormBuildComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormBuildComponent, selector: \"form-build\", viewQueries: [{ propertyName: \"builder\", first: true, predicate: FormioBuilder, descendants: true }], ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n  <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n    <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n    <span>\\n      Create New Form</span>\\n  </h5>\\n</div>\\n<hr />\\n<formio [form]=\\\"configForm()\\\" [submission]=\\\"this.service.builderForm\\\" (change)=\\\"configChange($event)\\\" class=\\\"w-100\\\"></formio>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n  <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n  <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }, { kind: \"component\", type: i4.FormioBuilder, selector: \"formio-builder\", inputs: [\"form\", \"options\"], outputs: [\"change\", \"ready\", \"error\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormBuildComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-build', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n  <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n    <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n    <span>\\n      Create New Form</span>\\n  </h5>\\n</div>\\n<hr />\\n<formio [form]=\\\"configForm()\\\" [submission]=\\\"this.service.builderForm\\\" (change)=\\\"configChange($event)\\\" class=\\\"w-100\\\"></formio>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n  <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n  <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }], propDecorators: { builder: [{\n                type: ViewChild,\n                args: [FormioBuilder]\n            }] } });\n\nclass FormViewComponent {\n    service;\n    router;\n    route;\n    alerts;\n    mobileView = false;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    ngOnInit() {\n        this.service.resetSubmission();\n    }\n    onFormError(err) {\n        this.alerts.error(AlertType.FORM_VIEW, err);\n    }\n    onSubmitError(err) {\n        this.router.navigate(['../error'], { relativeTo: this.route });\n    }\n    onSubmitDone(submission) {\n        this.router.navigate([`../submission/${submission._id}`], { relativeTo: this.route });\n    }\n    onSubmitLoadError(err) {\n        this.router.navigate(['../complete'], { relativeTo: this.route });\n    }\n    onSubmit(submission) {\n        this.service.createSubmission(submission).then((result) => {\n            this.service.loadSubmission(result._id)\n                .then((submission) => this.onSubmitDone(submission))\n                .catch((err) => this.onSubmitLoadError(err));\n        }).catch((err) => this.onSubmitError(err));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormViewComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormViewComponent, selector: \"form-view\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-center my-2\\\">\\n    <div class=\\\"form-ui-controls d-flex gap-2 justify-content-center\\\">\\n        <div class=\\\"d-flex gap-2\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"mobileView ? 'active': ''\\\" (click)=\\\"mobileView = true\\\"><i class=\\\"bi bi-phone\\\"></i></button>\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"!mobileView ? 'active': ''\\\" (click)=\\\"mobileView = false\\\"><i class=\\\"bi bi-laptop\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"mobileView ? 'mobileView' : ''\\\">\\n    <div class=\\\"bg-body rounded shadow-sm p-2 renderer\\\">\\n        <formio [url]=\\\"service.formUrl\\\" [form]=\\\"service.form\\\" (submit)=\\\"onSubmit($event)\\\" (error)=\\\"onFormError($event)\\\"></formio>\\n    </div>\\n</div>\", styles: [\".mobileView .renderer{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-view', template: \"<div class=\\\"d-flex justify-content-center my-2\\\">\\n    <div class=\\\"form-ui-controls d-flex gap-2 justify-content-center\\\">\\n        <div class=\\\"d-flex gap-2\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"mobileView ? 'active': ''\\\" (click)=\\\"mobileView = true\\\"><i class=\\\"bi bi-phone\\\"></i></button>\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"!mobileView ? 'active': ''\\\" (click)=\\\"mobileView = false\\\"><i class=\\\"bi bi-laptop\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"mobileView ? 'mobileView' : ''\\\">\\n    <div class=\\\"bg-body rounded shadow-sm p-2 renderer\\\">\\n        <formio [url]=\\\"service.formUrl\\\" [form]=\\\"service.form\\\" (submit)=\\\"onSubmit($event)\\\" (error)=\\\"onFormError($event)\\\"></formio>\\n    </div>\\n</div>\", styles: [\".mobileView .renderer{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nclass FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    builder;\n    mobileView = false;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    cancel() {\n        this.service.cancelFormUpdate();\n        this.afterCancel();\n    }\n    afterCancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    afterSave() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    onFormConflict(err) {\n        this.router.navigate(['../conflict'], { relativeTo: this.route });\n    }\n    onBuilder(builder) {\n        this.builder = builder;\n    }\n    onDisplaySelect(event) {\n        this.builder.setDisplay(event.target.value);\n    }\n    saveForm() {\n        this.service.saveForm().then(() => {\n            this.afterSave();\n        }).catch((err) => {\n            if (err._id === this.service.form._id) {\n                this.onFormConflict(err);\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormEditComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormEditComponent, selector: \"form-edit\", ngImport: i0, template: \"<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\" (ready)=\\\"onBuilder($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\\n\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"], dependencies: [{ kind: \"component\", type: i4.FormioBuilder, selector: \"formio-builder\", inputs: [\"form\", \"options\"], outputs: [\"change\", \"ready\", \"error\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormEditComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-edit', template: \"<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\" (ready)=\\\"onBuilder($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\\n\", styles: [\".formbuilder{display:flex;flex-direction:row;justify-content:space-between;gap:10px}.formbuilder .formarea{width:80%;padding:20px;border:1px solid #ccc;border-radius:5px;background-color:#fff}.formbuilder .formcomponents{padding:10px;width:18%;border:1px solid #ccc;border-radius:5px;background-color:#fff}.mobileView .formbuilder{display:flex;gap:30px}.mobileView .formbuilder .formarea{width:30%!important;margin:0 auto!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nclass FormComponent {\n    service;\n    router;\n    route;\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormComponent, selector: \"form-form\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n        <span><a class=\\\"nav-link\\\" routerLink=\\\"..\\\">Forms</a></span> / <span class=\\\"text-primary\\\">{{service.form.title || 'Form'}}</span>\\n    </h5>\\n    <ul aria-label=\\\"Form\\\" role=\\\"navigation\\\" class=\\\"nav nav-pills\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLinkActive=\\\"bg-primary-subtle\\\" class=\\\"nav-link text-primary\\\" routerLink=\\\"edit\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i> Edit\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-eye fs-xs\\\"></i> Use\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"service.app.config?.showData\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"submission\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i> Data\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-gear fs-xs\\\"></i> Settings\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n<router-outlet></router-outlet>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.RouterOutlet, selector: \"router-outlet\", inputs: [\"name\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2.RouterLinkActive, selector: \"[routerLinkActive]\", inputs: [\"routerLinkActiveOptions\", \"ariaCurrentWhenActive\", \"routerLinkActive\"], outputs: [\"isActiveChange\"], exportAs: [\"routerLinkActive\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-form', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n        <span><a class=\\\"nav-link\\\" routerLink=\\\"..\\\">Forms</a></span> / <span class=\\\"text-primary\\\">{{service.form.title || 'Form'}}</span>\\n    </h5>\\n    <ul aria-label=\\\"Form\\\" role=\\\"navigation\\\" class=\\\"nav nav-pills\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLinkActive=\\\"bg-primary-subtle\\\" class=\\\"nav-link text-primary\\\" routerLink=\\\"edit\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i> Edit\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-eye fs-xs\\\"></i> Use\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"service.app.config?.showData\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"submission\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i> Data\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-gear fs-xs\\\"></i> Settings\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n<router-outlet></router-outlet>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });\n\nclass EnterpriseBuilderLoaderComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: EnterpriseBuilderLoaderComponent, selector: \"loader\", ngImport: i0, template: \"<div class=\\\"formio-loader\\\">\\n    <div class=\\\"loader-wrapper\\\">\\n        <div class=\\\"loader text-center\\\"></div>\\n    </div>\\n</div>\", styles: [\".formio-loader{position:relative;min-height:100px}.loader-wrapper{z-index:1000;position:absolute;inset:0;background-color:#0000}.loader{position:absolute;left:50%;top:50%;margin-left:-30px;margin-top:-30px;z-index:10000;display:inline-block;border:6px solid #f3f3f3;border-top:6px solid #3498db;border-radius:50%;width:60px;height:60px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\\n\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'loader', template: \"<div class=\\\"formio-loader\\\">\\n    <div class=\\\"loader-wrapper\\\">\\n        <div class=\\\"loader text-center\\\"></div>\\n    </div>\\n</div>\", styles: [\".formio-loader{position:relative;min-height:100px}.loader-wrapper{z-index:1000;position:absolute;inset:0;background-color:#0000}.loader{position:absolute;left:50%;top:50%;margin-left:-30px;margin-top:-30px;z-index:10000;display:inline-block;border:6px solid #f3f3f3;border-top:6px solid #3498db;border-radius:50%;width:60px;height:60px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\\n\"] }]\n        }] });\n\nclass FormsComponent {\n    service;\n    constructor(service) {\n        this.service = service;\n    }\n    get searchForm() {\n        return {\n            components: [\n                {\n                    type: 'columns',\n                    columns: [\n                        {\n                            width: 6,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'textfield',\n                                    label: 'Search by Title',\n                                    input: true,\n                                    prefix: '<i class=\"bi bi-search\"></i>',\n                                    hideLabel: true,\n                                    placeholder: 'Search by Title',\n                                    key: 'title'\n                                }\n                            ]\n                        },\n                        {\n                            width: 4,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'tags',\n                                    label: 'Search by Tags',\n                                    input: true,\n                                    hideLabel: true,\n                                    placeholder: 'Search by Tags',\n                                    key: 'tags'\n                                }\n                            ]\n                        },\n                        {\n                            width: 2,\n                            offset: 0,\n                            push: 0,\n                            pull: 0,\n                            size: 'md',\n                            components: [\n                                {\n                                    type: 'button',\n                                    label: 'Search',\n                                    action: 'event',\n                                    event: 'search',\n                                    leftIcon: 'bi bi-search',\n                                    block: true,\n                                    input: true,\n                                    saveOnEnter: true,\n                                    key: 'search'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n    get search() {\n        return { data: this.service.searchQuery };\n    }\n    enableSearch(form) {\n        form.on('search', (data) => this.service.loadForms(data));\n    }\n    get pageNumbers() {\n        return Array.from({ length: this.service.totalPages }, (_, i) => i + 1);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsComponent, deps: [{ token: FormsService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormsComponent, selector: \"enterprise-builder-forms\", ngImport: i0, template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi bi-list-check fs-5\\\"></i>\\n        Forms\\n    </h5>\\n    <a routerLink=\\\"build\\\" class=\\\"btn btn-primary\\\">Create Form</a>\\n</div>\\n<div class=\\\"bg-body p-2 mb-3\\\">\\n    <formio [form]=\\\"searchForm\\\" [submission]=\\\"search\\\" (ready)=\\\"enableSearch($event)\\\"></formio>\\n</div>\\n<div class=\\\"form-list-header list-group-flush d-flex flex-row justify-content-between align-items-center mb-2\\\">\\n    <div class=\\\"col-8 ps-3 fw-3 text-muted\\\">Title</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Actions</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Tags</div>\\n</div>\\n<hr />\\n<loader *ngIf=\\\"service.formsLoading\\\"></loader>\\n<ul *ngIf=\\\"!service.formsLoading\\\" class=\\\"list-group list-group-flush list-group-light\\\">\\n    <a class=\\\"list-group-item list-group-item-action d-flex flex-row  align-items-center py-4 mb-2 rounded shadow-sm\\\"\\n        *ngFor=\\\"let form of (service.forms | async)\\\">\\n        <!-- <i class=\\\"bi bi-file-medical fs-4 text-muted\\\"></i> -->\\n        <div class=\\\"col-8 ms-3 mr-auto d-flex flex-row gap-4 justify-content-start align-items-center cursor-pointer\\\"\\n            routerLink=\\\"{{ form._id }}/view\\\">\\n            <div class=\\\"ms-3 me-auto\\\">\\n                <div class=\\\"fs-4 fw-3 text-muted\\\">{{ form.title }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">created {{ form.created | date: 'short' }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">modified {{ form.modified | date: 'short' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2 form-actions d-flex flex-row  align-items-start gap-2 text-center ml-auto\\\">\\n            <a routerLink=\\\"{{ form._id }}/edit\\\" class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i>\\n            </a>\\n            <a routerLink=\\\"{{ form._id }}/submission\\\"\\n                class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-2 form-tags d-flex flex-row align-items-center\\\">\\n            <span class=\\\"badge text-bg-secondary me-1\\\" *ngFor=\\\"let tag of form.tags\\\">{{tag}}</span>\\n        </div>\\n    </a>\\n</ul>\\n<div *ngIf=\\\"!service.formsLoading\\\" class=\\\"d-flex justify-content-center\\\">\\n    <nav aria-label=\\\"Forms Navigation\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"!service.formsLoading\\\">\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.prevPage()\\\"><i class=\\\"bi bi-chevron-left\\\"></i></button></li>\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let i of pageNumbers;\\\">\\n                <button class=\\\"page-link\\\" [attr.aria-current]=\\\"i===service.page\\\" [ngClass]=\\\"{active: (i === service.page)}\\\" (click)=\\\"service.goto(i)\\\">{{ i }}</button>\\n            </li>\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.nextPage()\\\"><i class=\\\"bi bi-chevron-right\\\"></i></button></li>\\n        </ul>\\n    </nav>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }, { kind: \"component\", type: EnterpriseBuilderLoaderComponent, selector: \"loader\" }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2$1.DatePipe, name: \"date\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'enterprise-builder-forms', template: \"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi bi-list-check fs-5\\\"></i>\\n        Forms\\n    </h5>\\n    <a routerLink=\\\"build\\\" class=\\\"btn btn-primary\\\">Create Form</a>\\n</div>\\n<div class=\\\"bg-body p-2 mb-3\\\">\\n    <formio [form]=\\\"searchForm\\\" [submission]=\\\"search\\\" (ready)=\\\"enableSearch($event)\\\"></formio>\\n</div>\\n<div class=\\\"form-list-header list-group-flush d-flex flex-row justify-content-between align-items-center mb-2\\\">\\n    <div class=\\\"col-8 ps-3 fw-3 text-muted\\\">Title</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Actions</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Tags</div>\\n</div>\\n<hr />\\n<loader *ngIf=\\\"service.formsLoading\\\"></loader>\\n<ul *ngIf=\\\"!service.formsLoading\\\" class=\\\"list-group list-group-flush list-group-light\\\">\\n    <a class=\\\"list-group-item list-group-item-action d-flex flex-row  align-items-center py-4 mb-2 rounded shadow-sm\\\"\\n        *ngFor=\\\"let form of (service.forms | async)\\\">\\n        <!-- <i class=\\\"bi bi-file-medical fs-4 text-muted\\\"></i> -->\\n        <div class=\\\"col-8 ms-3 mr-auto d-flex flex-row gap-4 justify-content-start align-items-center cursor-pointer\\\"\\n            routerLink=\\\"{{ form._id }}/view\\\">\\n            <div class=\\\"ms-3 me-auto\\\">\\n                <div class=\\\"fs-4 fw-3 text-muted\\\">{{ form.title }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">created {{ form.created | date: 'short' }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">modified {{ form.modified | date: 'short' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2 form-actions d-flex flex-row  align-items-start gap-2 text-center ml-auto\\\">\\n            <a routerLink=\\\"{{ form._id }}/edit\\\" class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i>\\n            </a>\\n            <a routerLink=\\\"{{ form._id }}/submission\\\"\\n                class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-2 form-tags d-flex flex-row align-items-center\\\">\\n            <span class=\\\"badge text-bg-secondary me-1\\\" *ngFor=\\\"let tag of form.tags\\\">{{tag}}</span>\\n        </div>\\n    </a>\\n</ul>\\n<div *ngIf=\\\"!service.formsLoading\\\" class=\\\"d-flex justify-content-center\\\">\\n    <nav aria-label=\\\"Forms Navigation\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"!service.formsLoading\\\">\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.prevPage()\\\"><i class=\\\"bi bi-chevron-left\\\"></i></button></li>\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let i of pageNumbers;\\\">\\n                <button class=\\\"page-link\\\" [attr.aria-current]=\\\"i===service.page\\\" [ngClass]=\\\"{active: (i === service.page)}\\\" (click)=\\\"service.goto(i)\\\">{{ i }}</button>\\n            </li>\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.nextPage()\\\"><i class=\\\"bi bi-chevron-right\\\"></i></button></li>\\n        </ul>\\n    </nav>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }] });\n\nconst formResolver = (route, state, service = inject(FormsService), router = inject(Router)) => {\n    return service.app.loadProject().then(() => service.loadForm(route.paramMap.get('formId')).catch(() => {\n        router.navigate(['..']);\n    }));\n};\n\nconst formsResolver = (route, state, service = inject(FormsService)) => {\n    return service.app.loadProject().then(() => service.loadForms());\n};\n\nclass FormDeleteComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    onCancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    onDeleteDone() {\n        this.router.navigate(['../../'], { relativeTo: this.route });\n    }\n    onDeleteError(err) {\n        // Do nothing and allow extended classes to override.\n    }\n    onDelete() {\n        this.service.deleteForm()\n            .then(() => this.onDeleteDone())\n            .catch((err) => this.onDeleteError(err));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormDeleteComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormDeleteComponent, selector: \"form-delete\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>Are you sure you wish to delete {{service.form?.title}} form?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger me-2\\\">Yes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormDeleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-delete', template: \"<div class=\\\"p-3\\\">\\n    <h3>Are you sure you wish to delete {{service.form?.title}} form?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger me-2\\\">Yes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nclass FormCompleteComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormCompleteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormCompleteComponent, selector: \"form-complete\", ngImport: i0, template: \"<div class=\\\"alert alert-success\\\">Submission Complete!</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormCompleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-complete', template: \"<div class=\\\"alert alert-success\\\">Submission Complete!</div>\" }]\n        }] });\n\nclass FormErrorComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormErrorComponent, selector: \"form-error\", ngImport: i0, template: \"<div class=\\\"alert alert-danger\\\">Unable to submit form. Please contact the administrator.</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormErrorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-error', template: \"<div class=\\\"alert alert-danger\\\">Unable to submit form. Please contact the administrator.</div>\" }]\n        }] });\n\nclass FormSubmissionDeleteComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    cancel() {\n        this.router.navigate(['../view'], { relativeTo: this.route });\n    }\n    deleteSubmission() {\n        this.service.deleteSubmission().then(() => {\n            this.router.navigate(['../..'], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionDeleteComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionDeleteComponent, selector: \"form-submission-delete\", ngImport: i0, template: \"<h3>Are you sure you wish to delete this record?</h3>\\n<div class=\\\"btn-toolbar\\\">\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-primary me-3 px-3 py-2\\\">No</button>\\n  <button type=\\\"button\\\" (click)=\\\"deleteSubmission()\\\" class=\\\"btn btn-light px-3 py-2\\\" style=\\\"margin-right: 10px;\\\">Yes, delete this submission</button>\\n</div>\", styles: [\"\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionDeleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-delete', template: \"<h3>Are you sure you wish to delete this record?</h3>\\n<div class=\\\"btn-toolbar\\\">\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-primary me-3 px-3 py-2\\\">No</button>\\n  <button type=\\\"button\\\" (click)=\\\"deleteSubmission()\\\" class=\\\"btn btn-light px-3 py-2\\\" style=\\\"margin-right: 10px;\\\">Yes, delete this submission</button>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nclass FormSubmissionEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    saveSubmission(submission) {\n        return this.service.saveSubmission(submission).then(() => {\n            this.router.navigate(['../view'], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionEditComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionEditComponent, selector: \"form-submission-edit\", ngImport: i0, template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" (submit)=\\\"saveSubmission($event)\\\"></formio>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionEditComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-edit', template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" (submit)=\\\"saveSubmission($event)\\\"></formio>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nconst submissionResolver = (route, state, service = inject(FormsService), alerts = inject(EnterpriseBuilderAlerts), router = inject(Router)) => {\n    return service.loadSubmission(route.paramMap.get('submissionId')).catch((err) => {\n        router.navigate(['..']);\n    });\n};\n\nclass FormSubmissionComponent {\n    service;\n    router;\n    route;\n    pdfDownload = '';\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.service.getDownloadUrl().then((url) => (this.pdfDownload = url));\n    }\n    isChildRoute(path) {\n        return this.route.children.some((child) => child.snapshot.routeConfig?.path === path);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionComponent, selector: \"form-submission\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <div class=\\\"d-flex align-items-start justify-content-between mb-3\\\">\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('')\\\" routerLink=\\\"./\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-eye text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('edit')\\\" routerLink=\\\"./edit\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-pencil text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && pdfDownload\\\" [href]=\\\"pdfDownload\\\" target=\\\"_blank\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-auto\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-file-pdf-fill text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user\\\" routerLink=\\\"./delete\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-trash text-muted m-0\\\"></i></a>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n  \", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.RouterOutlet, selector: \"router-outlet\", inputs: [\"name\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }, { kind: \"directive\", type: i2.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2.RouterLinkActive, selector: \"[routerLinkActive]\", inputs: [\"routerLinkActiveOptions\", \"ariaCurrentWhenActive\", \"routerLinkActive\"], outputs: [\"isActiveChange\"], exportAs: [\"routerLinkActive\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission', template: \"<div class=\\\"p-3\\\">\\n    <div class=\\\"d-flex align-items-start justify-content-between mb-3\\\">\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('')\\\" routerLink=\\\"./\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-eye text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('edit')\\\" routerLink=\\\"./edit\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-pencil text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && pdfDownload\\\" [href]=\\\"pdfDownload\\\" target=\\\"_blank\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-auto\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-file-pdf-fill text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user\\\" routerLink=\\\"./delete\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-trash text-muted m-0\\\"></i></a>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n  \" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });\n\nclass FormSubmissionsComponent {\n    service;\n    router;\n    route;\n    submissionForm;\n    constructor(service, router, route) {\n        this.service = service;\n        this.router = router;\n        this.route = route;\n    }\n    ngOnInit() {\n        const submissionFields = [];\n        this.service.resetSubmission();\n        Utils.eachComponent(Utils.fastCloneDeep(this.service.form.components), function (component, path) {\n            if (path.indexOf('.') === -1 && component.input && component.tableView) {\n                component.key = 'data.' + component.key;\n                submissionFields.push(component);\n            }\n        }, false);\n        this.submissionForm = {\n            components: [\n                {\n                    fetch: {\n                        sort: {\n                            defaultQuery: \"created\",\n                            descending: true\n                        },\n                        url: this.service.submissionUrl(),\n                        authenticate: true,\n                        enableFetch: true\n                    },\n                    components: submissionFields,\n                    type: \"datatable\",\n                    key: \"submissionDataTab\",\n                    label: \"Submission Data Tab\",\n                    itemsPerPage: 25,\n                    filterable: true,\n                    sortable: true,\n                    hideLabel: true,\n                    enableRowSelect: false\n                }\n            ]\n        };\n    }\n    onFormio(formio) {\n        formio.on('rowClick', (row) => {\n            this.router.navigate([row._id], { relativeTo: this.route });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionsComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionsComponent, selector: \"form-submissions\", ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <formio [form]=\\\"submissionForm\\\" (ready)=\\\"onFormio($event)\\\"></formio>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submissions', template: \"<div class=\\\"p-3\\\">\\n    <formio [form]=\\\"submissionForm\\\" (ready)=\\\"onFormio($event)\\\"></formio>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }] });\n\nclass FormSubmissionViewComponent {\n    service;\n    constructor(service) {\n        this.service = service;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionViewComponent, deps: [{ token: FormsService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSubmissionViewComponent, selector: \"form-submission-view\", ngImport: i0, template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" [options]=\\\"{readOnly: true}\\\"></formio>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSubmissionViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-submission-view', template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" [options]=\\\"{readOnly: true}\\\"></formio>\" }]\n        }], ctorParameters: () => [{ type: FormsService }] });\n\nconst submissionGuard = (component, currentRoute, currentState, nextState, service = inject(FormsService)) => {\n    service.unloadSubmission();\n    return true;\n};\n\nfunction SubmissionRoutes(config) {\n    return [\n        {\n            path: '',\n            component: config?.index || FormSubmissionsComponent\n        },\n        {\n            path: ':submissionId',\n            component: config?.submission || FormSubmissionComponent,\n            resolve: { submission: submissionResolver },\n            canDeactivate: [submissionGuard],\n            children: [\n                {\n                    path: '',\n                    component: config?.view || FormSubmissionViewComponent\n                },\n                {\n                    path: 'edit',\n                    component: config?.edit || FormSubmissionEditComponent\n                },\n                {\n                    path: 'delete',\n                    component: config?.delete || FormSubmissionDeleteComponent\n                }\n            ]\n        }\n    ];\n}\n\nconst formGuard = (component, currentRoute, currentState, nextState, service = inject(FormsService), router = inject(Router)) => {\n    if (service.changed) {\n        router.navigate([currentState.url.split('/').slice(0, -1).join('/'), 'changes'], {\n            state: { intendedRoute: nextState.url }\n        });\n        return false;\n    }\n    service.unloadForm();\n    return true;\n};\n\nclass FormSettingsComponent extends FormEditComponent {\n    settings = {};\n    ngOnInit() {\n        this.settings = { data: {\n                title: this.service.builderForm.title,\n                name: this.service.builderForm.name,\n                path: this.service.builderForm.path,\n                tags: this.service.builderForm.tags\n            } };\n    }\n    get settingsForm() {\n        return {\n            components: [\n                {\n                    type: 'textfield',\n                    key: 'title',\n                    label: 'Title',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'textfield',\n                    key: 'name',\n                    label: 'Name',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'textfield',\n                    key: 'path',\n                    label: 'API Path',\n                    validation: {\n                        required: true\n                    },\n                    input: true\n                },\n                {\n                    type: 'tags',\n                    key: 'tags',\n                    label: 'Tags',\n                    input: true\n                }\n            ]\n        };\n    }\n    saveForm() {\n        this.service.builderForm.title = this.settings.data.title;\n        this.service.builderForm.name = this.settings.data.name;\n        this.service.builderForm.path = this.settings.data.path;\n        if (this.settings.data.tags) {\n            this.service.builderForm.tags = this.settings.data.tags.split(',').map((tag) => tag.trim());\n        }\n        return super.saveForm();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSettingsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormSettingsComponent, selector: \"form-settings\", usesInheritance: true, ngImport: i0, template: \"<h4>Form Settings</h4>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio [form]=\\\"settingsForm\\\" [submission]=\\\"settings\\\"></formio>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\", dependencies: [{ kind: \"component\", type: i4.FormioComponent, selector: \"formio\", inputs: [\"src\", \"form\", \"submission\", \"url\", \"options\"], outputs: [\"ready\", \"submit\", \"error\", \"change\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormSettingsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-settings', template: \"<h4>Form Settings</h4>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio [form]=\\\"settingsForm\\\" [submission]=\\\"settings\\\"></formio>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\" }]\n        }] });\n\nclass FormChangesComponent extends FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    intendedRoute = null;\n    constructor(service, router, route, alerts) {\n        super(service, router, route, alerts);\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n        this.intendedRoute = this.router.getCurrentNavigation()?.extras.state?.intendedRoute || null;\n    }\n    afterCancel() {\n        if (this.intendedRoute) {\n            this.router.navigate([this.intendedRoute]);\n            return;\n        }\n        super.afterCancel();\n    }\n    afterSave() {\n        if (this.intendedRoute) {\n            this.router.navigate([this.intendedRoute]);\n            return;\n        }\n        super.afterSave();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormChangesComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormChangesComponent, selector: \"form-changes\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>You have made some changes to this form. Would you like to save your changes?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveForm()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormChangesComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-changes', template: \"<div class=\\\"p-3\\\">\\n    <h3>You have made some changes to this form. Would you like to save your changes?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveForm()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nclass FormConflictComponent extends FormEditComponent {\n    service;\n    router;\n    route;\n    alerts;\n    constructor(service, router, route, alerts) {\n        super(service, router, route, alerts);\n        this.service = service;\n        this.router = router;\n        this.route = route;\n        this.alerts = alerts;\n    }\n    onMergeConflict(err) {\n        this.alerts.add({\n            level: AlertLevel.ERROR,\n            message: 'There is still a conflict with this form. Please try again.'\n        });\n    }\n    merge() {\n        this.service.mergeAndSaveChanges().then(() => {\n            this.afterSave();\n        }).catch((err) => {\n            if (err._id === this.service.form._id) {\n                this.onMergeConflict(err);\n            }\n        });\n    }\n    onCancel() {\n        this.service.cancelFormUpdate();\n        this.afterCancel();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormConflictComponent, deps: [{ token: FormsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: EnterpriseBuilderAlerts }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.3\", type: FormConflictComponent, selector: \"form-conflict\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"p-3\\\">\\n    <h3>A newer version of this form has been saved to the server. The following changes will be merged with with this version.</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"merge()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormConflictComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'form-conflict', template: \"<div class=\\\"p-3\\\">\\n    <h3>A newer version of this form has been saved to the server. The following changes will be merged with with this version.</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"merge()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: () => [{ type: FormsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: EnterpriseBuilderAlerts }] });\n\nfunction FormRoutes(config = {}) {\n    return [\n        {\n            path: '',\n            component: config.index || FormsComponent,\n            resolve: { form: formsResolver },\n        },\n        {\n            path: 'build',\n            component: config.build || FormBuildComponent\n        },\n        {\n            path: ':formId',\n            component: config.form || FormComponent,\n            resolve: { form: formResolver },\n            canDeactivate: [formGuard],\n            children: [\n                {\n                    path: 'view',\n                    component: config.view || FormViewComponent\n                },\n                {\n                    path: 'edit',\n                    component: config.edit || FormEditComponent\n                },\n                {\n                    path: 'delete',\n                    component: config.delete || FormDeleteComponent\n                },\n                {\n                    path: 'changes',\n                    component: config.changes || FormChangesComponent\n                },\n                {\n                    path: 'conflict',\n                    component: config.conflict || FormConflictComponent\n                },\n                {\n                    path: 'complete',\n                    component: config.complete || FormCompleteComponent\n                },\n                {\n                    path: 'error',\n                    component: config.error || FormErrorComponent\n                },\n                {\n                    path: 'settings',\n                    component: config.settings || FormSettingsComponent\n                },\n                {\n                    path: 'submission',\n                    children: SubmissionRoutes(config.submission)\n                }\n            ]\n        }\n    ];\n}\n\nclass EnterpriseBuilderLoaderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, declarations: [EnterpriseBuilderLoaderComponent], imports: [CommonModule], exports: [EnterpriseBuilderLoaderComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        EnterpriseBuilderLoaderComponent\n                    ],\n                    exports: [\n                        EnterpriseBuilderLoaderComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass FormsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, declarations: [FormsComponent,\n            FormBuildComponent,\n            FormViewComponent,\n            FormEditComponent,\n            FormComponent,\n            FormDeleteComponent,\n            FormChangesComponent,\n            FormConflictComponent,\n            FormSettingsComponent,\n            FormSubmissionComponent,\n            FormSubmissionViewComponent,\n            FormSubmissionEditComponent,\n            FormSubmissionDeleteComponent,\n            FormSubmissionsComponent,\n            FormCompleteComponent,\n            FormErrorComponent], imports: [CommonModule,\n            FormioEmbedModule,\n            EnterpriseBuilderLoaderModule,\n            RouterModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, providers: [\n            FormsService,\n        ], imports: [CommonModule,\n            FormioEmbedModule,\n            EnterpriseBuilderLoaderModule,\n            RouterModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FormsComponent,\n                        FormBuildComponent,\n                        FormViewComponent,\n                        FormEditComponent,\n                        FormComponent,\n                        FormDeleteComponent,\n                        FormChangesComponent,\n                        FormConflictComponent,\n                        FormSettingsComponent,\n                        FormSubmissionComponent,\n                        FormSubmissionViewComponent,\n                        FormSubmissionEditComponent,\n                        FormSubmissionDeleteComponent,\n                        FormSubmissionsComponent,\n                        FormCompleteComponent,\n                        FormErrorComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormioEmbedModule,\n                        EnterpriseBuilderLoaderModule,\n                        RouterModule\n                    ],\n                    providers: [\n                        FormsService,\n                    ]\n                }]\n        }] });\n\nclass EnterpriseBuilderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, providers: [\n            EnterpriseBuilderService,\n            EnterpriseBuilderAlerts\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        EnterpriseBuilderService,\n                        EnterpriseBuilderAlerts\n                    ]\n                }]\n        }] });\n\nconst ENTERPRISE_BUILDER_CONFIG = new InjectionToken('ENTERPRISE_BUILDER_CONFIG');\nclass EnterpriseBuilderAppConfig extends FormioAppConfig {\n    license = '';\n    projectUrl = '';\n    baseUrl = '';\n    tag = '';\n    icons = '';\n    config = {};\n    showData = false;\n    constructor(config) {\n        super({\n            appUrl: config.projectUrl,\n            apiUrl: config.baseUrl\n        });\n        Formio.license = config.license;\n        this.license = config.license;\n        this.projectUrl = config.projectUrl;\n        this.baseUrl = config.baseUrl;\n        this.tag = config.tag;\n        this.icons = config.icons;\n        this.config = config.config;\n        this.showData = config.showData;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig, deps: [{ token: ENTERPRISE_BUILDER_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.3\", ngImport: i0, type: EnterpriseBuilderAppConfig, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ENTERPRISE_BUILDER_CONFIG]\n                }] }] });\n\nFormio$1.use(PremiumModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ENTERPRISE_BUILDER_CONFIG, EnterpriseBuilderAlerts, EnterpriseBuilderAppConfig, EnterpriseBuilderLoaderComponent, EnterpriseBuilderLoaderModule, EnterpriseBuilderModule, EnterpriseBuilderService, FormBuildComponent, FormCompleteComponent, FormComponent, FormDeleteComponent, FormEditComponent, FormErrorComponent, FormRoutes, FormSubmissionComponent, FormSubmissionDeleteComponent, FormSubmissionEditComponent, FormSubmissionViewComponent, FormSubmissionsComponent, FormViewComponent, FormsComponent, FormsModule, FormsService, SubmissionRoutes, formResolver, submissionResolver };\n//# sourceMappingURL=formio-enterprise-builder-angular.mjs.map\n","map":null,"preliminaryFileName":"formio-enterprise-builder-angular.mjs","sourcemapFileName":"formio-enterprise-builder-angular.mjs.map"},{"fileName":"formio-enterprise-builder-angular.mjs.map","needsCodeReference":false,"originalFileName":null,"source":"{\"version\":3,\"file\":\"formio-enterprise-builder-angular.mjs\",\"sources\":[\"../../../projects/enterprise-builder/src/enterprise-builder.alerts.ts\",\"../../../projects/enterprise-builder/src/enterprise-builder.service.ts\",\"../../../projects/enterprise-builder/src/form/forms.service.ts\",\"../../../projects/enterprise-builder/src/form/build/build.component.ts\",\"../../../projects/enterprise-builder/src/form/build/build.component.html\",\"../../../projects/enterprise-builder/src/form/view/view.component.ts\",\"../../../projects/enterprise-builder/src/form/view/view.component.html\",\"../../../projects/enterprise-builder/src/form/edit/edit.component.ts\",\"../../../projects/enterprise-builder/src/form/edit/edit.component.html\",\"../../../projects/enterprise-builder/src/form/form/form.component.ts\",\"../../../projects/enterprise-builder/src/form/form/form.component.html\",\"../../../projects/enterprise-builder/src/loader/loader.component.ts\",\"../../../projects/enterprise-builder/src/loader/loader.component.html\",\"../../../projects/enterprise-builder/src/form/forms.component.ts\",\"../../../projects/enterprise-builder/src/form/forms.component.html\",\"../../../projects/enterprise-builder/src/form/form.resolver.ts\",\"../../../projects/enterprise-builder/src/form/forms.resolver.ts\",\"../../../projects/enterprise-builder/src/form/delete/delete.component.ts\",\"../../../projects/enterprise-builder/src/form/delete/delete.component.html\",\"../../../projects/enterprise-builder/src/form/complete/complete.component.ts\",\"../../../projects/enterprise-builder/src/form/complete/complete.component.html\",\"../../../projects/enterprise-builder/src/form/error/error.component.ts\",\"../../../projects/enterprise-builder/src/form/error/error.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/delete/delete.component.ts\",\"../../../projects/enterprise-builder/src/form/submissions/delete/delete.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/edit/edit.component.ts\",\"../../../projects/enterprise-builder/src/form/submissions/edit/edit.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/submission.resolver.ts\",\"../../../projects/enterprise-builder/src/form/submissions/submission/submission.component.ts\",\"../../../projects/enterprise-builder/src/form/submissions/submission/submission.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/submissions/submissions.component.ts\",\"../../../projects/enterprise-builder/src/form/submissions/submissions/submissions.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/view/view.component.ts\",\"../../../projects/enterprise-builder/src/form/submissions/view/view.component.html\",\"../../../projects/enterprise-builder/src/form/submissions/submission.guard.ts\",\"../../../projects/enterprise-builder/src/form/submissions/submission.routes.ts\",\"../../../projects/enterprise-builder/src/form/form.guard.ts\",\"../../../projects/enterprise-builder/src/form/settings/settings.component.ts\",\"../../../projects/enterprise-builder/src/form/settings/settings.component.html\",\"../../../projects/enterprise-builder/src/form/changes/changes.component.ts\",\"../../../projects/enterprise-builder/src/form/changes/changes.component.html\",\"../../../projects/enterprise-builder/src/form/conflict/conflict.component.ts\",\"../../../projects/enterprise-builder/src/form/conflict/conflict.component.html\",\"../../../projects/enterprise-builder/src/form/form.routes.ts\",\"../../../projects/enterprise-builder/src/loader/loader.module.ts\",\"../../../projects/enterprise-builder/src/form/forms.module.ts\",\"../../../projects/enterprise-builder/src/enterprise-builder.module.ts\",\"../../../projects/enterprise-builder/src/enterprise-builder.config.ts\",\"../../../projects/enterprise-builder/src/index.ts\",\"../../../projects/enterprise-builder/src/formio-enterprise-builder-angular.ts\"],\"sourcesContent\":[\"import { Injectable } from \\\"@angular/core\\\";\\nimport { AlertService } from \\\"@formio/enterprise-builder-core\\\";\\n@Injectable({\\n    providedIn: 'root'\\n})\\nexport class EnterpriseBuilderAlerts extends AlertService {}\",\"import { Injectable } from '@angular/core';\\nimport { AppService, EnterpriseBuilderConfig } from '@formio/enterprise-builder-core';\\nimport { Submission } from '@formio/core/types';\\nimport { Router } from '@angular/router';\\nimport { EnterpriseBuilderAlerts } from './enterprise-builder.alerts';\\nimport { FormioAppConfig } from '@formio/angular';\\n@Injectable({\\n    providedIn: 'root'\\n})\\nexport class EnterpriseBuilderService extends AppService {\\n    constructor(\\n        public formioConfig: FormioAppConfig,\\n        public alerts: EnterpriseBuilderAlerts,\\n        public router: Router\\n    ) {\\n        const config: EnterpriseBuilderConfig = {...formioConfig, ...{\\n            license: formioConfig.license || '',\\n            projectUrl: formioConfig.projectUrl || formioConfig.appUrl || '',\\n            baseUrl: formioConfig.baseUrl || formioConfig.apiUrl || '',\\n        }};\\n        super(config, alerts);\\n    }\\n\\n    public async authenticate(): Promise<Submission> {\\n        try {\\n            await super.authenticate();\\n        }\\n        catch (err) {\\n            if (err === 'Unauthorized') {\\n                this.router.navigate([`/auth/login`]);\\n            }\\n        }\\n        return this.currentUser;\\n    }\\n}\",\"import { Injectable } from '@angular/core';\\nimport { FormService } from '@formio/enterprise-builder-core';\\nimport { EnterpriseBuilderService } from '../enterprise-builder.service';\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class FormsService extends FormService {\\n  constructor(public appService: EnterpriseBuilderService) {\\n    super(appService);\\n  }\\n}\",\"import { Component, OnInit, ViewChild } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\nimport { FormioBuilder } from '@formio/angular/embed';\\nimport { Form } from '@formio/core/types';\\n\\n@Component({\\n  selector: 'form-build',\\n  templateUrl: './build.component.html',\\n  styleUrls: ['./build.component.scss']\\n})\\nexport class FormBuildComponent implements OnInit {\\n  @ViewChild(FormioBuilder) builder: FormioBuilder;\\n  public formConfig: any = {data: {\\n    title: '',\\n    display: 'form'\\n  }}\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  ngOnInit(): void {\\n    this.service.resetForm();\\n  }\\n\\n  configChange(event) {\\n    if (\\n      event.changed && \\n      event.changed.component &&\\n      event.changed.component.key === 'display'\\n    ) {\\n      this.builder.builder.setDisplay(this.formConfig.data.display);\\n    }\\n  }\\n\\n  configForm() {\\n    return {\\n      components: [\\n        {\\n          \\\"columns\\\": [\\n            {\\n              \\\"components\\\": [\\n                {\\n                  \\\"label\\\": \\\"Title\\\",\\n                  \\\"placeholder\\\": \\\"Form Title\\\",\\n                  \\\"hideLabel\\\": true,\\n                  \\\"applyMaskOn\\\": \\\"change\\\",\\n                  \\\"tableView\\\": true,\\n                  \\\"validateWhenHidden\\\": false,\\n                  \\\"key\\\": \\\"title\\\",\\n                  \\\"type\\\": \\\"textfield\\\",\\n                  \\\"input\\\": true\\n                }\\n              ],\\n              \\\"width\\\": 8,\\n              \\\"offset\\\": 0,\\n              \\\"push\\\": 0,\\n              \\\"pull\\\": 0,\\n              \\\"size\\\": \\\"md\\\",\\n              \\\"currentWidth\\\": 8\\n            },\\n            {\\n              \\\"components\\\": [\\n                {\\n                  \\\"label\\\": \\\"Display\\\",\\n                  \\\"widget\\\": \\\"choicesjs\\\",\\n                  \\\"placeholder\\\": \\\"Display as\\\",\\n                  \\\"tableView\\\": true,\\n                  \\\"hideLabel\\\": true,\\n                  \\\"data\\\": {\\n                    \\\"values\\\": [\\n                      {\\n                        \\\"label\\\": \\\"Form\\\",\\n                        \\\"value\\\": \\\"form\\\"\\n                      },\\n                      {\\n                        \\\"label\\\": \\\"Wizard\\\",\\n                        \\\"value\\\": \\\"wizard\\\"\\n                      },\\n                      {\\n                        \\\"label\\\": \\\"PDF\\\",\\n                        \\\"value\\\": \\\"pdf\\\"\\n                      }\\n                    ]\\n                  },\\n                  \\\"validateWhenHidden\\\": false,\\n                  \\\"key\\\": \\\"display\\\",\\n                  \\\"type\\\": \\\"select\\\",\\n                  \\\"input\\\": true\\n                }\\n              ],\\n              \\\"width\\\": 4,\\n              \\\"offset\\\": 0,\\n              \\\"push\\\": 0,\\n              \\\"pull\\\": 0,\\n              \\\"size\\\": \\\"md\\\",\\n              \\\"currentWidth\\\": 4\\n            }\\n          ],\\n          \\\"key\\\": \\\"columns\\\",\\n          \\\"type\\\": \\\"columns\\\",\\n          \\\"input\\\": false,\\n          \\\"tableView\\\": false\\n        }\\n      ]\\n    }\\n  }\\n\\n  onSave(form: Form) {\\n    this.router.navigate(['..', form._id, 'view'], {relativeTo: this.route});\\n  }\\n\\n  saveForm() {\\n    this.service.builderForm.title = this.formConfig.data.title;\\n    this.service.builderForm.display = this.formConfig.data.display;\\n    this.service.saveForm().then((form) => this.onSave(form));\\n  }\\n}\\n\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n  <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n    <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n    <span>\\n      Create New Form</span>\\n  </h5>\\n</div>\\n<hr />\\n<formio [form]=\\\"configForm()\\\" [submission]=\\\"this.service.builderForm\\\" (change)=\\\"configChange($event)\\\" class=\\\"w-100\\\"></formio>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n  <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n  <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\",\"import { Component, OnInit } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\nimport { Submission } from '@formio/core/types';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\nimport { AlertType } from '@formio/enterprise-builder-core';\\n\\n@Component({\\n  selector: 'form-view',\\n  templateUrl: './view.component.html',\\n  styleUrls: ['./view.component.scss']\\n})\\nexport class FormViewComponent implements OnInit {\\n  public mobileView: boolean = false;\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  ngOnInit(): void {\\n    this.service.resetSubmission();\\n  }\\n\\n  onFormError(err: Error) {\\n    this.alerts.error(AlertType.FORM_VIEW, err);\\n  }\\n\\n  onSubmitError(err: Error) {\\n    this.router.navigate(['../error'], {relativeTo: this.route});\\n  }\\n\\n  onSubmitDone(submission: Submission) {\\n    this.router.navigate([`../submission/${submission._id}`], {relativeTo: this.route});\\n  }\\n\\n  onSubmitLoadError(err: Error) {\\n    this.router.navigate(['../complete'], {relativeTo: this.route});\\n  }\\n\\n  onSubmit(submission: Submission) {\\n    this.service.createSubmission(submission).then((result: any) => {\\n      this.service.loadSubmission(result._id)\\n        .then((submission: Submission) => this.onSubmitDone(submission))\\n        .catch((err: Error) => this.onSubmitLoadError(err));\\n    }).catch((err: Error) => this.onSubmitError(err));\\n  }\\n}\\n\",\"<div class=\\\"d-flex justify-content-center my-2\\\">\\n    <div class=\\\"form-ui-controls d-flex gap-2 justify-content-center\\\">\\n        <div class=\\\"d-flex gap-2\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"mobileView ? 'active': ''\\\" (click)=\\\"mobileView = true\\\"><i class=\\\"bi bi-phone\\\"></i></button>\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" [ngClass]=\\\"!mobileView ? 'active': ''\\\" (click)=\\\"mobileView = false\\\"><i class=\\\"bi bi-laptop\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"mobileView ? 'mobileView' : ''\\\">\\n    <div class=\\\"bg-body rounded shadow-sm p-2 renderer\\\">\\n        <formio [url]=\\\"service.formUrl\\\" [form]=\\\"service.form\\\" (submit)=\\\"onSubmit($event)\\\" (error)=\\\"onFormError($event)\\\"></formio>\\n    </div>\\n</div>\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\nimport { FormBuilder } from '@formio/js';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\n\\n@Component({\\n  selector: 'form-edit',\\n  templateUrl: './edit.component.html',\\n  styleUrls: ['./edit.component.scss']\\n})\\nexport class FormEditComponent {\\n  public builder: FormBuilder;\\n  public mobileView: boolean = false;\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  cancel() {\\n    this.service.cancelFormUpdate();\\n    this.afterCancel();\\n  }\\n\\n  afterCancel() {\\n    this.router.navigate(['../view'], {relativeTo: this.route});\\n  }\\n\\n  afterSave() {\\n    this.router.navigate(['../view'], {relativeTo: this.route});\\n  }\\n\\n  onFormConflict(err: any) {\\n    this.router.navigate(['../conflict'], {relativeTo: this.route});\\n  }\\n\\n  onBuilder(builder: FormBuilder) {\\n    this.builder = builder;\\n  }\\n\\n  onDisplaySelect(event) {\\n    this.builder.setDisplay(event.target.value);\\n  }\\n\\n  saveForm() {\\n    this.service.saveForm().then(() => {\\n      this.afterSave();\\n    }).catch((err: any) => {\\n      if (err._id === this.service.form._id) {\\n        this.onFormConflict(err);\\n      }\\n    });\\n  }\\n}\\n\",\"<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio-builder [form]=\\\"service.builderForm\\\" [options]=\\\"service.builderOptions\\\" (change)=\\\"service.onChange($event)\\\" (ready)=\\\"onBuilder($event)\\\"></formio-builder>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\\n\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\n\\n@Component({\\n  selector: 'form-form',\\n  templateUrl: './form.component.html'\\n})\\nexport class FormComponent {\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute\\n  ) {}\\n}\\n\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-2 text-body\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi fs-5 bi-card-list\\\"></i>\\n        <span><a class=\\\"nav-link\\\" routerLink=\\\"..\\\">Forms</a></span> / <span class=\\\"text-primary\\\">{{service.form.title || 'Form'}}</span>\\n    </h5>\\n    <ul aria-label=\\\"Form\\\" role=\\\"navigation\\\" class=\\\"nav nav-pills\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a routerLinkActive=\\\"bg-primary-subtle\\\" class=\\\"nav-link text-primary\\\" routerLink=\\\"edit\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i> Edit\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-eye fs-xs\\\"></i> Use\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"service.app.config?.showData\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"submission\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i> Data\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link text-primary\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"bg-primary-subtle\\\">\\n                <i class=\\\"bi bi-gear fs-xs\\\"></i> Settings\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n<router-outlet></router-outlet>\\n\",\"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'loader',\\n  templateUrl: './loader.component.html',\\n  styleUrls: ['./loader.component.scss']\\n})\\nexport class EnterpriseBuilderLoaderComponent {\\n\\n}\\n\",\"<div class=\\\"formio-loader\\\">\\n    <div class=\\\"loader-wrapper\\\">\\n        <div class=\\\"loader text-center\\\"></div>\\n    </div>\\n</div>\",\"import { Component } from '@angular/core';\\nimport { FormsService } from './forms.service';\\nimport { Webform } from '@formio/js';\\n\\n@Component({\\n  selector: 'enterprise-builder-forms',\\n  templateUrl: './forms.component.html'\\n})\\nexport class FormsComponent {\\n  constructor (public service: FormsService) {}\\n  get searchForm() {\\n    return {\\n      components: [\\n        {\\n          type: 'columns',\\n          columns: [\\n            {\\n              width: 6,\\n              offset: 0,\\n              push: 0,\\n              pull: 0,\\n              size: 'md',\\n              components: [\\n                {\\n                  type: 'textfield',\\n                  label: 'Search by Title',\\n                  input: true,\\n                  prefix: '<i class=\\\"bi bi-search\\\"></i>',\\n                  hideLabel: true,\\n                  placeholder: 'Search by Title',\\n                  key: 'title'\\n                }\\n              ]\\n            },\\n            {\\n              width: 4,\\n              offset: 0,\\n              push: 0,\\n              pull: 0,\\n              size: 'md',\\n              components: [\\n                {\\n                  type: 'tags',\\n                  label: 'Search by Tags',\\n                  input: true,\\n                  hideLabel: true,\\n                  placeholder: 'Search by Tags',\\n                  key: 'tags'\\n                }\\n              ]\\n            },\\n            {\\n              width: 2,\\n              offset: 0,\\n              push: 0,\\n              pull: 0,\\n              size: 'md',\\n              components: [\\n                {\\n                  type: 'button',\\n                  label: 'Search',\\n                  action: 'event',\\n                  event: 'search',\\n                  leftIcon: 'bi bi-search',\\n                  block: true,\\n                  input: true,\\n                  saveOnEnter: true,\\n                  key: 'search'\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n    };\\n  }\\n\\n  get search() {\\n    return {data: this.service.searchQuery};\\n  }\\n\\n  enableSearch(form: Webform) {\\n    form.on('search', (data) => this.service.loadForms(data));\\n  }\\n\\n  get pageNumbers() {\\n    return Array.from({ length: this.service.totalPages }, (_, i) => i + 1);\\n  }\\n}\\n\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n    <h5 class=\\\"my-2 d-flex gap-2 align-items-center\\\" style=\\\"font-size: 16px;\\\">\\n        <i class=\\\"bi bi-list-check fs-5\\\"></i>\\n        Forms\\n    </h5>\\n    <a routerLink=\\\"build\\\" class=\\\"btn btn-primary\\\">Create Form</a>\\n</div>\\n<div class=\\\"bg-body p-2 mb-3\\\">\\n    <formio [form]=\\\"searchForm\\\" [submission]=\\\"search\\\" (ready)=\\\"enableSearch($event)\\\"></formio>\\n</div>\\n<div class=\\\"form-list-header list-group-flush d-flex flex-row justify-content-between align-items-center mb-2\\\">\\n    <div class=\\\"col-8 ps-3 fw-3 text-muted\\\">Title</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Actions</div>\\n    <div class=\\\"col-2 ps-3 fw-3 text-muted\\\">Tags</div>\\n</div>\\n<hr />\\n<loader *ngIf=\\\"service.formsLoading\\\"></loader>\\n<ul *ngIf=\\\"!service.formsLoading\\\" class=\\\"list-group list-group-flush list-group-light\\\">\\n    <a class=\\\"list-group-item list-group-item-action d-flex flex-row  align-items-center py-4 mb-2 rounded shadow-sm\\\"\\n        *ngFor=\\\"let form of (service.forms | async)\\\">\\n        <!-- <i class=\\\"bi bi-file-medical fs-4 text-muted\\\"></i> -->\\n        <div class=\\\"col-8 ms-3 mr-auto d-flex flex-row gap-4 justify-content-start align-items-center cursor-pointer\\\"\\n            routerLink=\\\"{{ form._id }}/view\\\">\\n            <div class=\\\"ms-3 me-auto\\\">\\n                <div class=\\\"fs-4 fw-3 text-muted\\\">{{ form.title }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">created {{ form.created | date: 'short' }}</div>\\n                <div class=\\\"fs-6 fw-lighter text-muted\\\">modified {{ form.modified | date: 'short' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-2 form-actions d-flex flex-row  align-items-start gap-2 text-center ml-auto\\\">\\n            <a routerLink=\\\"{{ form._id }}/edit\\\" class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-pencil fs-xs\\\"></i>\\n            </a>\\n            <a routerLink=\\\"{{ form._id }}/submission\\\"\\n                class=\\\"btn btn-outline-secondary btn-icon btn-xs rounded-circle\\\">\\n                <i class=\\\"bi bi-table fs-xs\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"col-2 form-tags d-flex flex-row align-items-center\\\">\\n            <span class=\\\"badge text-bg-secondary me-1\\\" *ngFor=\\\"let tag of form.tags\\\">{{tag}}</span>\\n        </div>\\n    </a>\\n</ul>\\n<div *ngIf=\\\"!service.formsLoading\\\" class=\\\"d-flex justify-content-center\\\">\\n    <nav aria-label=\\\"Forms Navigation\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"!service.formsLoading\\\">\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.prevPage()\\\"><i class=\\\"bi bi-chevron-left\\\"></i></button></li>\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let i of pageNumbers;\\\">\\n                <button class=\\\"page-link\\\" [attr.aria-current]=\\\"i===service.page\\\" [ngClass]=\\\"{active: (i === service.page)}\\\" (click)=\\\"service.goto(i)\\\">{{ i }}</button>\\n            </li>\\n            <li class=\\\"page-item\\\"><button class=\\\"page-link\\\" (click)=\\\"service.nextPage()\\\"><i class=\\\"bi bi-chevron-right\\\"></i></button></li>\\n        </ul>\\n    </nav>\\n</div>\\n\",\"import { inject } from '@angular/core';\\nimport { ResolveFn, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\\nimport { FormsService } from './forms.service';\\nexport const formResolver: ResolveFn<any> = (\\n  route: ActivatedRouteSnapshot,\\n  state: RouterStateSnapshot,\\n  service: FormsService = inject(FormsService),\\n  router: Router = inject(Router)\\n) => {\\n  return service.app.loadProject().then(() => service.loadForm(route.paramMap.get('formId')).catch(() => {\\n    router.navigate(['..']);\\n  }));\\n};\\n\",\"import { inject } from '@angular/core';\\nimport { ResolveFn, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\\nimport { FormsService } from './forms.service';\\nexport const formsResolver: ResolveFn<any> = (\\n  route: ActivatedRouteSnapshot,\\n  state: RouterStateSnapshot,\\n  service: FormsService = inject(FormsService)\\n) => {\\n  return service.app.loadProject().then(() => service.loadForms());\\n};\\n\",\"import { Component } from '@angular/core';\\nimport { FormsService } from '../forms.service';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\n\\n@Component({\\n  selector: 'form-delete',\\n  templateUrl: './delete.component.html'\\n})\\nexport class FormDeleteComponent {\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  onCancel() {\\n    this.router.navigate(['../view'], {relativeTo: this.route});\\n  }\\n\\n  onDeleteDone() {\\n    this.router.navigate(['../../'], {relativeTo: this.route});\\n  }\\n\\n  onDeleteError(err: Error) {\\n    // Do nothing and allow extended classes to override.\\n  }\\n\\n  onDelete() {\\n    this.service.deleteForm()\\n      .then(() => this.onDeleteDone())\\n      .catch((err: Error) => this.onDeleteError(err));\\n  }\\n}\\n\",\"<div class=\\\"p-3\\\">\\n    <h3>Are you sure you wish to delete {{service.form?.title}} form?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger me-2\\\">Yes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\",\"import { Component } from '@angular/core';\\n@Component({\\n  selector: 'form-complete',\\n  templateUrl: './complete.component.html'\\n})\\nexport class FormCompleteComponent {}\\n\",\"<div class=\\\"alert alert-success\\\">Submission Complete!</div>\",\"import { Component } from '@angular/core';\\n@Component({\\n  selector: 'form-error',\\n  templateUrl: './error.component.html'\\n})\\nexport class FormErrorComponent {}\\n\",\"<div class=\\\"alert alert-danger\\\">Unable to submit form. Please contact the administrator.</div>\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../../forms.service';\\nimport { AlertLevel } from '@formio/enterprise-builder-core';\\nimport { EnterpriseBuilderAlerts } from '../../../enterprise-builder.alerts';\\n\\n@Component({\\n  selector: 'form-submission-delete',\\n  templateUrl: './delete.component.html',\\n  styleUrls: ['./delete.component.scss']\\n})\\nexport class FormSubmissionDeleteComponent {\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  cancel() {\\n    this.router.navigate(['../view'], {relativeTo: this.route});\\n  }\\n\\n  deleteSubmission() {\\n    this.service.deleteSubmission().then(() => {\\n      this.router.navigate(['../..'], {relativeTo: this.route});\\n    });\\n  }\\n}\\n\",\"<h3>Are you sure you wish to delete this record?</h3>\\n<div class=\\\"btn-toolbar\\\">\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-primary me-3 px-3 py-2\\\">No</button>\\n  <button type=\\\"button\\\" (click)=\\\"deleteSubmission()\\\" class=\\\"btn btn-light px-3 py-2\\\" style=\\\"margin-right: 10px;\\\">Yes, delete this submission</button>\\n</div>\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../../forms.service';\\nimport { AlertLevel } from '@formio/enterprise-builder-core';\\nimport { EnterpriseBuilderAlerts } from '../../../enterprise-builder.alerts';\\n\\n@Component({\\n  selector: 'form-submission-edit',\\n  templateUrl: './edit.component.html',\\n  styleUrls: ['./edit.component.scss']\\n})\\nexport class FormSubmissionEditComponent {\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {}\\n\\n  saveSubmission(submission:any) {\\n    return this.service.saveSubmission(submission).then(() => {\\n      this.router.navigate(['../view'], {relativeTo: this.route});\\n    });\\n  }\\n}\\n\",\"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" (submit)=\\\"saveSubmission($event)\\\"></formio>\",\"import { inject } from '@angular/core';\\nimport { ResolveFn, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\nimport { AlertLevel } from '@formio/enterprise-builder-core';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\n\\nexport const submissionResolver: ResolveFn<any> = (\\n  route: ActivatedRouteSnapshot,\\n  state: RouterStateSnapshot,\\n  service: FormsService = inject(FormsService),\\n  alerts: EnterpriseBuilderAlerts = inject(EnterpriseBuilderAlerts),\\n  router: Router = inject(Router)\\n) => {\\n  return service.loadSubmission(route.paramMap.get('submissionId')).catch((err: any) => {\\n    router.navigate(['..']);\\n  });\\n};\\n\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../../forms.service';\\n\\n@Component({\\n  selector: 'form-submission',\\n  templateUrl: './submission.component.html',\\n  styleUrls: ['./submission.component.scss']\\n})\\nexport class FormSubmissionComponent {\\n  pdfDownload: string = '';\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute\\n  ) {\\n    this.service.getDownloadUrl().then((url: string) => (this.pdfDownload = url));\\n  }\\n\\n  isChildRoute(path: string) {\\n    return this.route.children.some((child) => child.snapshot.routeConfig?.path === path);\\n  }\\n}\\n\",\"<div class=\\\"p-3\\\">\\n    <div class=\\\"d-flex align-items-start justify-content-between mb-3\\\">\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('')\\\" routerLink=\\\"./\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-eye text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && !isChildRoute('edit')\\\" routerLink=\\\"./edit\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-pencil text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user && pdfDownload\\\" [href]=\\\"pdfDownload\\\" target=\\\"_blank\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-auto\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-file-pdf-fill text-muted m-0\\\"></i></a>\\n        <a *ngIf=\\\"service.app.user\\\" routerLink=\\\"./delete\\\" routerLinkActive=\\\"border-secondary bg-light\\\" class=\\\"py-1 px-2 border border-1 rounded-circle me-1\\\" style=\\\"width: 2em; height: 2em;\\\"><i class=\\\"bi bi-trash text-muted m-0\\\"></i></a>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n  \",\"import { Component, OnInit } from '@angular/core';\\nimport { FormsService } from '../../forms.service';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { Utils } from '@formio/js/utils';\\n\\n@Component({\\n  selector: 'form-submissions',\\n  templateUrl: './submissions.component.html',\\n  styleUrls: ['./submissions.component.scss']\\n})\\nexport class FormSubmissionsComponent implements OnInit {\\n  public submissionForm: any;\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n  ) {}\\n\\n  ngOnInit(): void {\\n    const submissionFields: any[] = [];\\n    this.service.resetSubmission();\\n    Utils.eachComponent(Utils.fastCloneDeep(this.service.form.components), function(component: any, path: string) {\\n      if (path.indexOf('.') === -1 && component.input && component.tableView) {\\n        component.key = 'data.' + component.key;\\n        submissionFields.push(component);\\n      }\\n    }, false);\\n    this.submissionForm = {\\n      components: [\\n        {\\n          fetch : {\\n            sort: {\\n              defaultQuery: \\\"created\\\",\\n              descending: true\\n            },\\n            url : this.service.submissionUrl(),\\n            authenticate : true,\\n            enableFetch : true\\n          },\\n          components : submissionFields,\\n          type : \\\"datatable\\\",\\n          key : \\\"submissionDataTab\\\",\\n          label: \\\"Submission Data Tab\\\",\\n          itemsPerPage: 25,\\n          filterable : true,\\n          sortable : true,\\n          hideLabel: true,\\n          enableRowSelect: false\\n        }\\n      ]\\n    };\\n  }\\n\\n  onFormio(formio: any) {\\n    formio.on('rowClick', (row: any) => {\\n      this.router.navigate([row._id], {relativeTo: this.route});\\n    });\\n  }\\n}\\n\",\"<div class=\\\"p-3\\\">\\n    <formio [form]=\\\"submissionForm\\\" (ready)=\\\"onFormio($event)\\\"></formio>\\n</div>\\n\",\"import { Component } from '@angular/core';\\nimport { FormsService } from '../../forms.service';\\n\\n@Component({\\n  selector: 'form-submission-view',\\n  templateUrl: './view.component.html',\\n  styleUrls: ['./view.component.scss']\\n})\\nexport class FormSubmissionViewComponent {\\n  constructor(public service: FormsService) {}\\n}\\n\",\"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.submission\\\" [options]=\\\"{readOnly: true}\\\"></formio>\",\"import { ActivatedRouteSnapshot, CanDeactivateFn, RouterStateSnapshot } from '@angular/router';\\nimport { FormSubmissionComponent } from './submission/submission.component';\\nimport { FormsService } from '../forms.service';\\nimport { inject } from '@angular/core';\\nexport const submissionGuard: CanDeactivateFn<unknown> = (\\n  component: FormSubmissionComponent,\\n  currentRoute: ActivatedRouteSnapshot,\\n  currentState: RouterStateSnapshot,\\n  nextState: RouterStateSnapshot,\\n  service: FormsService = inject(FormsService),\\n) => {\\n  service.unloadSubmission();\\n  return true;\\n};\\n\",\"import { Routes } from \\\"@angular/router\\\";\\nimport { FormSubmissionDeleteComponent } from \\\"./delete/delete.component\\\";\\nimport { FormSubmissionEditComponent } from \\\"./edit/edit.component\\\";\\nimport { submissionResolver } from \\\"./submission.resolver\\\";\\nimport { FormSubmissionComponent } from \\\"./submission/submission.component\\\";\\nimport { FormSubmissionsComponent } from \\\"./submissions/submissions.component\\\";\\nimport { FormSubmissionViewComponent } from \\\"./view/view.component\\\";\\nimport { submissionGuard } from \\\"./submission.guard\\\";\\n\\nexport interface SubmissionRouteConfig {\\n    index?: any;\\n    submission?: any;\\n    view?: any;\\n    edit?: any;\\n    delete?: any;\\n}\\n\\nexport function SubmissionRoutes(config?: SubmissionRouteConfig): Routes {\\n    return [\\n        {\\n          path: '',\\n          component: config?.index || FormSubmissionsComponent\\n        },\\n        {\\n          path: ':submissionId',\\n          component: config?.submission || FormSubmissionComponent,\\n          resolve: { submission: submissionResolver },\\n          canDeactivate: [submissionGuard],\\n          children: [\\n            {\\n              path: '',\\n              component: config?.view || FormSubmissionViewComponent\\n            },\\n            {\\n              path: 'edit',\\n              component: config?.edit || FormSubmissionEditComponent\\n            },\\n            {\\n              path: 'delete',\\n              component: config?.delete || FormSubmissionDeleteComponent\\n            }\\n          ]\\n        }\\n    ];\\n}\",\"import { ActivatedRoute, ActivatedRouteSnapshot, CanDeactivateFn, Router, RouterStateSnapshot } from '@angular/router';\\nimport { FormsService } from './forms.service';\\nimport { inject } from '@angular/core';\\nimport { FormComponent } from './form/form.component';\\nimport { EnterpriseBuilderAlerts } from '../enterprise-builder.alerts';\\nexport const formGuard: CanDeactivateFn<unknown> = (\\n  component: FormComponent,\\n  currentRoute: ActivatedRouteSnapshot,\\n  currentState: RouterStateSnapshot,\\n  nextState: RouterStateSnapshot,\\n  service: FormsService = inject(FormsService),\\n  router: Router = inject(Router)\\n) => {\\n  if (service.changed) {\\n    router.navigate([currentState.url.split('/').slice(0, -1).join('/'), 'changes'], {\\n      state: { intendedRoute: nextState.url }\\n    });\\n    return false;\\n  }\\n  service.unloadForm();\\n  return true;\\n};\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { FormEditComponent } from '../edit/edit.component';\\n\\n@Component({\\n  selector: 'form-settings',\\n  templateUrl: './settings.component.html'\\n})\\nexport class FormSettingsComponent extends FormEditComponent implements OnInit {\\n  public settings: any = {};\\n  ngOnInit(): void {\\n    this.settings = {data: {\\n      title: this.service.builderForm.title,\\n      name: this.service.builderForm.name,\\n      path: this.service.builderForm.path,\\n      tags: this.service.builderForm.tags\\n    }};\\n  }\\n  get settingsForm() {\\n    return {\\n      components: [\\n        {\\n          type: 'textfield',\\n          key: 'title',\\n          label: 'Title',\\n          validation: {\\n            required: true\\n          },\\n          input: true\\n        },\\n        {\\n          type: 'textfield',\\n          key: 'name',\\n          label: 'Name',\\n          validation: {\\n            required: true\\n          },\\n          input: true\\n        },\\n        {\\n          type: 'textfield',\\n          key: 'path',\\n          label: 'API Path',\\n          validation: {\\n            required: true\\n          },\\n          input: true\\n        },\\n        {\\n          type: 'tags',\\n          key: 'tags',\\n          label: 'Tags',\\n          input: true\\n        }\\n      ]\\n    };\\n  }\\n  saveForm() {\\n    this.service.builderForm.title = this.settings.data.title;\\n    this.service.builderForm.name = this.settings.data.name;\\n    this.service.builderForm.path = this.settings.data.path;\\n    if (this.settings.data.tags) {\\n      this.service.builderForm.tags = this.settings.data.tags.split(',').map((tag: string) => tag.trim());\\n    }\\n    return super.saveForm();\\n  }\\n}\\n\",\"<h4>Form Settings</h4>\\n<div class=\\\"bg-body rounded shadow-sm p-2\\\">\\n    <formio [form]=\\\"settingsForm\\\" [submission]=\\\"settings\\\"></formio>\\n</div>\\n<div class=\\\"d-flex justify-content-end my-3\\\">\\n    <a type=\\\"button\\\" class=\\\"btn btn-success align-self-end\\\" (click)=\\\"saveForm()\\\">Save Form</a>\\n</div>\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { FormsService } from '../forms.service';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\nimport { FormEditComponent } from '../edit/edit.component';\\n\\n@Component({\\n  selector: 'form-changes',\\n  templateUrl: './changes.component.html'\\n})\\nexport class FormChangesComponent extends FormEditComponent {\\n  private intendedRoute: string | null = null;\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {\\n    super(service, router, route, alerts);\\n    this.intendedRoute = this.router.getCurrentNavigation()?.extras.state?.intendedRoute || null;\\n  }\\n\\n  afterCancel() {\\n    if (this.intendedRoute) {\\n      this.router.navigate([this.intendedRoute]);\\n      return;\\n    }\\n    super.afterCancel();\\n  }\\n\\n  afterSave() {\\n    if (this.intendedRoute) {\\n      this.router.navigate([this.intendedRoute]);\\n      return;\\n    }\\n    super.afterSave();\\n  }\\n}\\n\",\"<div class=\\\"p-3\\\">\\n    <h3>You have made some changes to this form. Would you like to save your changes?</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveForm()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\",\"import { Component } from '@angular/core';\\nimport { ActivatedRoute, Router } from '@angular/router';\\nimport { AlertLevel } from '@formio/enterprise-builder-core'\\nimport { FormsService } from '../forms.service';\\nimport { EnterpriseBuilderAlerts } from '../../enterprise-builder.alerts';\\nimport { FormEditComponent } from '../edit/edit.component';\\n\\n@Component({\\n  selector: 'form-conflict',\\n  templateUrl: './conflict.component.html'\\n})\\nexport class FormConflictComponent extends FormEditComponent {\\n  constructor(\\n    public service: FormsService,\\n    public router: Router,\\n    public route: ActivatedRoute,\\n    public alerts: EnterpriseBuilderAlerts\\n  ) {\\n    super(service, router, route, alerts);\\n  }\\n\\n  onMergeConflict(err: any) {\\n    this.alerts.add({\\n      level: AlertLevel.ERROR,\\n      message: 'There is still a conflict with this form. Please try again.'\\n    });\\n  }\\n\\n  merge() {\\n    this.service.mergeAndSaveChanges().then(() => {\\n      this.afterSave();\\n    }).catch((err: any) => {\\n      if (err._id === this.service.form._id) {\\n        this.onMergeConflict(err);\\n      }\\n    });\\n  }\\n\\n  onCancel() {\\n    this.service.cancelFormUpdate();\\n    this.afterCancel();\\n  }\\n}\\n\",\"<div class=\\\"p-3\\\">\\n    <h3>A newer version of this form has been saved to the server. The following changes will be merged with with this version.</h3>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"button\\\" (click)=\\\"merge()\\\" class=\\\"btn btn-primary me-2\\\">Yes, save my changes</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-default\\\">No</button>\\n    </div>\\n</div>\",\"import { Routes } from '@angular/router';\\nimport { FormBuildComponent } from './build/build.component';\\nimport { FormViewComponent } from './view/view.component';\\nimport { FormEditComponent } from './edit/edit.component';\\nimport { FormComponent } from './form/form.component';\\nimport { FormsComponent } from './forms.component';\\nimport { formResolver } from './form.resolver';\\nimport { formsResolver } from './forms.resolver';\\nimport { FormDeleteComponent } from './delete/delete.component';\\nimport { FormCompleteComponent } from './complete/complete.component';\\nimport { FormErrorComponent } from './error/error.component';\\nimport { SubmissionRouteConfig, SubmissionRoutes } from './submissions/submission.routes';\\nimport { formGuard } from './form.guard';\\nimport { FormSettingsComponent } from './settings/settings.component';\\nimport { FormChangesComponent } from './changes/changes.component';\\nimport { FormConflictComponent } from './conflict/conflict.component';\\n\\nexport interface FormRouteConfig {\\n    index?: any;\\n    build?: any;\\n    form?: any;\\n    view?: any;\\n    edit?: any;\\n    delete?: any;\\n    changes?: any;\\n    conflict?: any;\\n    settings?: any;\\n    access?: any;\\n    complete?: any;\\n    error?: any;\\n    submission?: SubmissionRouteConfig;\\n}\\n\\nexport function FormRoutes(config: FormRouteConfig = {}): Routes {\\n  return [\\n    {\\n      path: '',\\n      component: config.index || FormsComponent,\\n      resolve: { form: formsResolver },\\n    },\\n    {\\n      path: 'build',\\n      component: config.build || FormBuildComponent\\n    },\\n    {\\n      path: ':formId',\\n      component: config.form || FormComponent,\\n      resolve: { form: formResolver },\\n      canDeactivate: [formGuard],\\n      children: [\\n        {\\n          path: 'view',\\n          component: config.view || FormViewComponent\\n        },\\n        {\\n          path: 'edit',\\n          component: config.edit || FormEditComponent\\n        },\\n        {\\n          path: 'delete',\\n          component: config.delete || FormDeleteComponent\\n        },\\n        {\\n          path: 'changes',\\n          component: config.changes || FormChangesComponent\\n        },\\n        {\\n          path: 'conflict',\\n          component: config.conflict || FormConflictComponent\\n        },\\n        {\\n          path: 'complete',\\n          component: config.complete || FormCompleteComponent\\n        },\\n        {\\n          path: 'error',\\n          component: config.error || FormErrorComponent\\n        },\\n        {\\n          path: 'settings',\\n          component: config.settings || FormSettingsComponent\\n        },\\n        {\\n          path: 'submission',\\n          children: SubmissionRoutes(config.submission)\\n        }\\n      ]\\n    }\\n  ];\\n}\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { EnterpriseBuilderLoaderComponent } from './loader.component';\\n\\n@NgModule({\\n  declarations: [\\n    EnterpriseBuilderLoaderComponent\\n  ],\\n  exports: [\\n    EnterpriseBuilderLoaderComponent\\n  ],\\n  imports: [\\n    CommonModule\\n  ]\\n})\\nexport class EnterpriseBuilderLoaderModule { }\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsComponent } from './forms.component';\\nimport { FormBuildComponent } from './build/build.component';\\nimport { FormViewComponent } from './view/view.component';\\nimport { FormEditComponent } from './edit/edit.component';\\nimport { FormioEmbedModule } from '@formio/angular/embed';\\nimport { FormComponent } from './form/form.component';\\nimport { FormsService } from './forms.service';\\nimport { FormDeleteComponent } from './delete/delete.component';\\nimport { FormCompleteComponent } from './complete/complete.component';\\nimport { FormErrorComponent } from './error/error.component';\\nimport { EnterpriseBuilderLoaderModule } from '../loader/loader.module';\\nimport { RouterModule } from '@angular/router';\\nimport { FormSubmissionComponent, FormSubmissionDeleteComponent, FormSubmissionEditComponent, FormSubmissionsComponent, FormSubmissionViewComponent } from './submissions';\\nimport { FormSettingsComponent } from './settings/settings.component';\\nimport { FormChangesComponent } from './changes/changes.component';\\nimport { FormConflictComponent } from './conflict/conflict.component';\\n\\n@NgModule({\\n  declarations: [\\n    FormsComponent,\\n    FormBuildComponent,\\n    FormViewComponent,\\n    FormEditComponent,\\n    FormComponent,\\n    FormDeleteComponent,\\n    FormChangesComponent,\\n    FormConflictComponent,\\n    FormSettingsComponent,\\n    FormSubmissionComponent,\\n    FormSubmissionViewComponent,\\n    FormSubmissionEditComponent,\\n    FormSubmissionDeleteComponent,\\n    FormSubmissionsComponent,\\n    FormCompleteComponent,\\n    FormErrorComponent,\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormioEmbedModule,\\n    EnterpriseBuilderLoaderModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    FormsService,\\n  ]\\n})\\nexport class FormsModule {}\\n\",\"import { NgModule } from \\\"@angular/core\\\";\\nimport { EnterpriseBuilderAlerts } from \\\"./enterprise-builder.alerts\\\";\\nimport { EnterpriseBuilderService } from \\\"./enterprise-builder.service\\\";\\n@NgModule({\\n    providers: [\\n        EnterpriseBuilderService,\\n        EnterpriseBuilderAlerts\\n    ]\\n})\\nexport class EnterpriseBuilderModule {}\",\"import { Inject, Injectable, InjectionToken } from \\\"@angular/core\\\";\\nimport { FormioAppConfig } from \\\"@formio/angular\\\";\\nimport { Formio } from '@formio/js';\\nimport { EnterpriseBuilderConfig } from \\\"@formio/enterprise-builder-core\\\";\\n\\nexport const ENTERPRISE_BUILDER_CONFIG = new InjectionToken<EnterpriseBuilderConfig>('ENTERPRISE_BUILDER_CONFIG');\\n\\n@Injectable()\\nexport class EnterpriseBuilderAppConfig extends FormioAppConfig {\\n    public license: string = '';\\n    public projectUrl: string = '';\\n    public baseUrl: string = '';\\n    public tag: string = '';\\n    public icons: string = '';\\n    public config: any = {};\\n    public showData: boolean = false;\\n    constructor(@Inject(ENTERPRISE_BUILDER_CONFIG) config: EnterpriseBuilderConfig) {\\n        super({\\n            appUrl: config.projectUrl,\\n            apiUrl: config.baseUrl\\n        });\\n        Formio.license = config.license;\\n        this.license = config.license;\\n        this.projectUrl = config.projectUrl;\\n        this.baseUrl = config.baseUrl;\\n        this.tag = config.tag;\\n        this.icons = config.icons;\\n        this.config = config.config;\\n        this.showData = config.showData;\\n    }\\n}\",\"import { Formio } from '@formio/angular/embed';\\nimport PremiumModule from '@formio/premium';\\nFormio.use(PremiumModule);\\nexport * from './form';\\nexport * from './enterprise-builder.service';\\nexport * from './enterprise-builder.alerts';\\nexport * from './enterprise-builder.module';\\nexport * from './enterprise-builder.config';\\nexport * from './loader';\\nexport {\\n    EnterpriseBuilderConfig,\\n    AppService,\\n    EmptySubmission,\\n    EmptyForm,\\n    FormChangeEvent,\\n    FormService,\\n    AlertType,\\n    AlertLevel,\\n    Alert,\\n    AlertService\\n} from '@formio/enterprise-builder-core';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './index';\\n\"],\"names\":[\"i2.EnterpriseBuilderAlerts\",\"i3\",\"i1.EnterpriseBuilderService\",\"i1.FormsService\",\"i3.EnterpriseBuilderAlerts\",\"i4\",\"i5\",\"i2\",\"i4.EnterpriseBuilderLoaderComponent\",\"i1\",\"Formio\"],\"mappings\":\"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\"}","type":"asset"}]}